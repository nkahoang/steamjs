// Generated by CoffeeScript 1.7.1
(function() {
  $(document).ready(function() {
    var ajax_loader, fn_compare_array_field, grid;
    ajax_loader = $("#ajax_loader");
    fn_compare_array_field = function(field) {
      return function(a, b) {
        if ("undefined" !== typeof a[field]) {
          if ("undefined" !== typeof b[field]) {
            return a[field].join().localeCompare(b[field].join());
          } else {
            return 1;
          }
        } else {
          if ("undefined" !== typeof b[field]) {
            return -1;
          } else {
            return 0;
          }
        }
      };
    };
    window.vM = new kendo.observable({
      steam_id: null,
      games_dS: new kendo.data.DataSource({
        pageSize: 50,
        serverPaging: false,
        serverFiltering: false,
        requestEnd: function(e) {
          return console.log(e);
        },
        transport: {
          dataType: 'json',
          read: {
            url: 'steam/user_owned_games/',
            data: function(e) {
              return {
                id: vM.steam_id
              };
            }
          }
        },
        schema: {
          data: 'games',
          total: 'in_db_count'
        }
      }),
      steam_id_keypress: function(e) {
        if (e.which === 13) {
          return this.getDetails_clicked();
        }
      },
      getDetails_clicked: function() {
        ajax_loader.fadeIn();
        return grid.data("kendoGrid").dataSource.read();
      }
    });
    grid = $("#games_grid").kendoGrid({
      dataSource: vM.games_dS,
      autoBind: false,
      filterable: true,
      sortable: true,
      resizable: true,
      dataBound: function() {
        return ajax_loader.fadeOut();
      },
      pageable: {
        pageSizes: [25, 50, 100, 200, 500, 1000, 2000],
        pageSize: 50,
        input: true
      },
      columns: [
        {
          field: "id",
          title: " ",
          width: 167,
          template: kendo.template($("#app_image_template").html()),
          sortable: false,
          filterable: false
        }, {
          field: "name",
          title: "Name",
          template: kendo.template($("#app_name_template").html())
        }, {
          field: "developers",
          title: "Developers",
          width: 180,
          template: kendo.template($("#app_developers_template").html()),
          sortable: {
            compare: fn_compare_array_field('developers')
          }
        }, {
          field: "publishers",
          title: "Publisher",
          width: 180,
          template: kendo.template($("#app_publishers_template").html()),
          sortable: {
            compare: fn_compare_array_field('publishers')
          }
        }, {
          field: "metacritic.score",
          title: "Metacritic",
          width: 120,
          template: kendo.template($("#app_metacritic_template").html()),
          sortable: {
            compare: function(a, b) {
              if ("undefined" === typeof a.metacritic) {
                if ("undefined" === typeof b.metacritic) {
                  return 0;
                } else {
                  return -1;
                }
              } else if ("undefined" === typeof b.metacritic) {
                return 1;
              } else {
                return a.metacritic.score - b.metacritic.score;
              }
            }
          }
        }, {
          field: "playtime_forever",
          title: "Playtime",
          template: kendo.template($("#app_playtime_template").html())
        }
      ]
    });
    return kendo.bind($("#main"), vM);
  });

}).call(this);
