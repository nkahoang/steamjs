// Generated by CoffeeScript 1.7.1
(function() {
  $(document).ready(function() {
    var ajax_loader, clear_error, display_error, err_message, fn_compare_array_field, grid;
    ajax_loader = $("#ajax_loader");
    err_message = $("#err_message");
    clear_error = function() {
      return err_message.html("");
    };
    display_error = function(title, message) {
      var template;
      template = "<div class=\"alert alert-dismissable alert-danger\">\n  <button type=\"button\" class=\"close\" data-dismiss=\"alert\">Ã—</button>\n  <strong>" + title + "</strong><br/>\n  " + message + "\n</div>";
      clear_error();
      return err_message.append($(template));
    };
    fn_compare_array_field = function(field) {
      return function(a, b) {
        if ("undefined" !== typeof a[field]) {
          if ("undefined" !== typeof b[field]) {
            return a[field].join().localeCompare(b[field].join());
          } else {
            return 1;
          }
        } else {
          if ("undefined" !== typeof b[field]) {
            return -1;
          } else {
            return 0;
          }
        }
      };
    };
    window.vM = new kendo.observable({
      steam_id: null,
      games_dS: new kendo.data.DataSource({
        pageSize: 50,
        serverPaging: false,
        serverFiltering: false,
        transport: {
          dataType: 'json',
          read: {
            url: 'steam/user_owned_games/',
            data: function(e) {
              return {
                id: vM.steam_id.trim()
              };
            }
          }
        },
        schema: {
          data: function(response) {
            var game, _i, _len, _ref;
            if (response.games) {
              _ref = response.games;
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                game = _ref[_i];
                game.score = "undefined" !== typeof game.metacritic ? game.metacritic.score : -1;
                game.developers_human = "undefined" !== typeof game.developers ? game.developers.join(", ") : "";
                game.publishers_human = "undefined" !== typeof game.publishers ? game.publishers.join(", ") : "";
              }
              return response.games;
            } else {
              display_error("Error occurred", response.message);
              return [];
            }
          },
          total: 'in_db_count',
          model: {
            id: '_id',
            fields: {
              'score': {
                type: "number"
              },
              'playtime_forever': {
                type: "number"
              }
            }
          }
        }
      }),
      steam_id_keypress: function(e) {
        if (e.which === 13) {
          return this.getDetails_clicked();
        }
      },
      getDetails_clicked: function() {
        ajax_loader.fadeIn();
        clear_error();
        return grid.data("kendoGrid").dataSource.read();
      }
    });
    grid = $("#games_grid").kendoGrid({
      dataSource: vM.games_dS,
      autoBind: false,
      filterable: true,
      sortable: true,
      resizable: true,
      dataBound: function() {
        return ajax_loader.fadeOut();
      },
      pageable: {
        pageSizes: [25, 50, 100, 200, 500, 1000, 2000],
        pageSize: 50,
        input: true
      },
      columns: [
        {
          field: "id",
          title: " ",
          width: 167,
          template: kendo.template($("#app_image_template").html()),
          sortable: false,
          filterable: false
        }, {
          field: "name",
          title: "Name",
          template: kendo.template($("#app_name_template").html())
        }, {
          field: "developers_human",
          title: "Developers",
          width: 180,
          template: kendo.template($("#app_developers_template").html())
        }, {
          field: "publishers_human",
          title: "Publisher",
          width: 180,
          template: kendo.template($("#app_publishers_template").html())
        }, {
          field: "score",
          title: "Metacritic",
          width: 120,
          template: kendo.template($("#app_metacritic_template").html())
        }, {
          field: "playtime_forever",
          title: "Playtime",
          template: kendo.template($("#app_playtime_template").html())
        }
      ]
    });
    return kendo.bind($("#main"), vM);
  });

}).call(this);
