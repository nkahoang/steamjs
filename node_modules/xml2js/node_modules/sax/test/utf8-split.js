var assert = require('assert'***REMOVED***
var saxStream = require('../lib/sax'***REMOVED***.createStream(***REMOVED***

var b = new Buffer('误'***REMOVED***

saxStream.on('text', function(text***REMOVED*** {
  assert.equal(text, b.toString(***REMOVED******REMOVED***
}***REMOVED***

saxStream.write(new Buffer('<test><a>'***REMOVED******REMOVED***
saxStream.write(b.slice(0, 1***REMOVED******REMOVED***
saxStream.write(b.slice(1***REMOVED******REMOVED***
saxStream.write(new Buffer('</a><b>'***REMOVED******REMOVED***
saxStream.write(b.slice(0, 2***REMOVED******REMOVED***
saxStream.write(b.slice(2***REMOVED******REMOVED***
saxStream.write(new Buffer('</b><c>'***REMOVED******REMOVED***
saxStream.write(b***REMOVED***
saxStream.write(new Buffer('</c>'***REMOVED******REMOVED***
saxStream.write(Buffer.concat([new Buffer('<d>'***REMOVED***, b.slice(0, 1***REMOVED***]***REMOVED******REMOVED***
saxStream.end(Buffer.concat([b.slice(1***REMOVED***, new Buffer('</d></test>'***REMOVED***]***REMOVED******REMOVED***

var saxStream2 = require('../lib/sax'***REMOVED***.createStream(***REMOVED***

saxStream2.on('text', function(text***REMOVED*** {
  assert.equal(text, '�'***REMOVED***
}***REMOVED***;

saxStream2.write(new Buffer('<e>'***REMOVED******REMOVED***;
saxStream2.write(new Buffer([0xC0]***REMOVED******REMOVED***;
saxStream2.write(new Buffer('</e>'***REMOVED******REMOVED***;
saxStream2.write(Buffer.concat([new Buffer('<f>'***REMOVED***, b.slice(0,1***REMOVED***]***REMOVED******REMOVED***;
saxStream2.end(***REMOVED***;
