// pull out /GeneralSearchResponse/categories/category/items/product tags
// the rest we don't care about.

var sax = require("../lib/sax.js"***REMOVED***
var fs = require("fs"***REMOVED***
var path = require("path"***REMOVED***
var xmlFile = path.resolve(__dirname, "shopping.xml"***REMOVED***
var util = require("util"***REMOVED***
var http = require("http"***REMOVED***

fs.readFile(xmlFile, function (er, d***REMOVED*** {
  http.createServer(function (req, res***REMOVED*** {
    if (er***REMOVED*** throw er
    var xmlstr = d.toString("utf8"***REMOVED***

    var parser = sax.parser(true***REMOVED***
    var products = []
    var product = null
    var currentTag = null

    parser.onclosetag = function (tagName***REMOVED*** {
      if (tagName === "product"***REMOVED*** {
        products.push(product***REMOVED***
        currentTag = product = null
        return
    ***REMOVED***
      if (currentTag && currentTag.parent***REMOVED*** {
        var p = currentTag.parent
        delete currentTag.parent
        currentTag = p
    ***REMOVED***
  ***REMOVED***

    parser.onopentag = function (tag***REMOVED*** {
      if (tag.name !== "product" && !product***REMOVED*** return
      if (tag.name === "product"***REMOVED*** {
        product = tag
    ***REMOVED***
      tag.parent = currentTag
      tag.children = []
      tag.parent && tag.parent.children.push(tag***REMOVED***
      currentTag = tag
  ***REMOVED***

    parser.ontext = function (text***REMOVED*** {
      if (currentTag***REMOVED*** currentTag.children.push(text***REMOVED***
  ***REMOVED***

    parser.onend = function (***REMOVED*** {
      var out = util.inspect(products, false, 3, true***REMOVED***
      res.writeHead(200, {"content-type":"application/json"}***REMOVED***
      res.end("{\"ok\":true}"***REMOVED***
      // res.end(JSON.stringify(products***REMOVED******REMOVED***
  ***REMOVED***

    parser.write(xmlstr***REMOVED***.end(***REMOVED***
***REMOVED******REMOVED***.listen(1337***REMOVED***
}***REMOVED***
