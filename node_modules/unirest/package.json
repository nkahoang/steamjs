{
  "name": "unirest",
  "version": "0.2.0",
  "description": "Lightweight HTTP Request library.",
  "main": "index.js",
  "directories": {
    "test": "tests"
***REMOVED***,
  "dependencies": {
    "mime": "~1.2.11",
    "request": "~2.34.0",
    "should": "~2.0.1"
***REMOVED***,
  "devDependencies": {
    "mocha": "~1.13.0"
***REMOVED***,
  "scripts": {
    "test": "make test"
***REMOVED***,
  "repository": {
    "type": "git",
    "url": "git@github.com:Mashape/unirest-nodejs.git"
***REMOVED***,
  "keywords": [
    "request",
    "http",
    "library",
    "superagent",
    "simple",
    "util",
    "utility",
    "method"
  ],
  "author": {
    "name": "Nijiko Yonskai",
    "email": "nijiko@mashape.com"
***REMOVED***,
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Mashape/unirest-nodejs/issues"
***REMOVED***,
  "readme": "# Unirest for Node.js [![Build Status](https://travis-ci.org/Mashape/unirest-nodejs.png?branch=master***REMOVED***](https://travis-ci.org/Mashape/unirest-nodejs***REMOVED***\n\nUnirest is a set of lightweight HTTP libraries available in multiple languages.\n\nCreated with love by [nijikokun](http://github.com/nijikokun***REMOVED*** @ [mashape.com](http://mashape.com***REMOVED***\n\n## Installing\n\nTo utilize unirest for node.js install the the `npm` module:\n\n```js\nnpm install unirest\n```\n\nAfter installing the `npm` package you can now start simplifying requests like so:\n\n```js\nvar unirest = require('unirest'***REMOVED***;\n```\n\n## Creating Requests\n\nYou're probably wondering how by using **Unirest** makes creating requests easier. Besides automatically supporting gzip, and parsing responses, lets start with a basic working example:\n\n```js\nunirest.post('http://httpbin.org/post'***REMOVED***\n.headers({ 'Accept': 'application/json' }***REMOVED***\n.send({ \"parameter\": 23, \"foo\": \"bar\" }***REMOVED***\n.end(function (response***REMOVED*** {\n  console.log(response.body***REMOVED***;\n}***REMOVED***;\n```\n\n## Uploading Files\n\nTransferring file data has been simplified:\n\n```js\nunirest.post('http://httpbin.org/post'***REMOVED***\n.headers({ 'Accept': 'application/json' }***REMOVED***\n.field('parameter', 'value'***REMOVED*** // Form field\n.attach('file', '/tmp/file'***REMOVED*** // Attachment\n.end(function (response***REMOVED*** {\n  console.log(response.body***REMOVED***;\n}***REMOVED***;\n```\n\n## Custom Entity Body\n\n```js\nunirest.post('http://httpbin.org/post'***REMOVED***\n.headers({ 'Accept': 'application/json' }***REMOVED***\n.send(new Buffer([1,2,3]***REMOVED******REMOVED***\n.end(function (response***REMOVED*** {\n  console.log(response.body***REMOVED***;\n}***REMOVED***;\n```\n\n# Unirest\n\nA request can be initiated by invoking the appropriate method on the unirest object, then calling `.end(***REMOVED***` to send the request. Alternatively you can send the request directly by providing a callback along with the url.\n\n## unirest(method [, uri, headers, body, callback]***REMOVED***\n\n- `method` - Request type (GET, PUT, POST, etc...***REMOVED***\n- `uri` - _Optional_; When declared the method will return a [Request](#request***REMOVED*** object. \n          Otherwise it will return the method below with `method` set to the method given.\n- `headers` (`Object`***REMOVED*** - _Optional_; Will be aliased to unirest\\[method] `headers` argument when `uri` is present.\n- `body` (`Mixed`***REMOVED*** - _Optional_; Will be aliased to unirest\\[method] `body` argument when `uri` is present.\n- `callback` (`Function`***REMOVED*** - _Optional_; Will be aliased to unirest\\[method] `callback` argument when `uri` is present.\n\n## unirest\\[method](url [, headers, body, callback]***REMOVED***\n\n- `method` - Request type, pre-defined methods, see below.\n- `url` - Request location.\n- `headers` (`Object` | `Function`***REMOVED*** - _Optional_; When `Object` headers are passed along to the `Request.set(***REMOVED***` method, \n   when `Function` this argument is used as the `callback`.\n- `body` (`Mixed` | `Function`***REMOVED*** - _Optional_; When `body` is not a `Function` it will be passed along to `Request.send(***REMOVED***` method,\n   otherwise when a `Function` it will be used as the `callback`.\n- `callback` (`Function`***REMOVED*** - _Optional_; Calls end with given argument, otherwise `Request` is returned.\n\nAll arguments above, with the exclusion of `url`, will accept a `Function` as the `callback`. \nWhen no `callback` is present, the [Request](#request***REMOVED*** object will be returned.\n\n### get\n\nReturns a [Request](#request***REMOVED*** object with the `method` option set to `GET`\n\n```js\nvar Request = unirest.get('http://httpbin.org/get'***REMOVED***;\n```\n\n### head\nReturns a [Request](#request***REMOVED*** object with the `method` option set to `HEAD`\n\n```js\nvar Request = unirest.head('http://httpbin.org/get'***REMOVED***;\n```\n\n### post\nReturns a [Request](#request***REMOVED*** object with the `method` option set to `POST`\n\n```js\nvar Request = unirest.post('http://httpbin.org/post'***REMOVED***;\n```\n\n### patch\n\nReturns a [Request](#request***REMOVED*** object with the `method` option set to `PATCH`\n\n```js\nvar Request = unirest.patch('http://httpbin.org/patch'***REMOVED***;\n```\n\n### delete\nReturns a [Request](#request***REMOVED*** object with the `method` option set to `DELETE`\n\n```js\nvar Request = unirest.delete('http://httpbin.org/delete'***REMOVED***;\n```\n\n## unirest.jar(***REMOVED***\n\nCreates a container to store multiple cookies, i.e. a cookie jar.\n\n```js\nvar CookieJar = unirest.jar(***REMOVED***;\nCookieJar.add(unirest.cookie('some value'***REMOVED******REMOVED***;\nunirest.get('http://httpbin.org/get'***REMOVED***.jar(CookieJar***REMOVED***;\n```\n\n## unirest.cookie(String***REMOVED***\n\nCreates a cookie, see above for example.\n\n## unirest.request\n\n`mikeal/request` library (the underlying layer of unirest-nodejs***REMOVED*** for direct use.\n\n# Request\n\nProvides simple and easy to use methods for manipulating the request prior to being sent. This object is created when a \nUnirest Method is invoked. This object contains methods that are chainable like other libraries such as jQuery and popular \nrequest module Superagent (which this library is modeled after slightly***REMOVED***.\n\n**Example**\n\n```js\nvar Request = unirest.post('http://httpbin.org/post'***REMOVED***;\n\nRequest.headers({\n  'Accepts': 'application/json'\n}***REMOVED***.end(function (response***REMOVED*** {\n  ...\n}***REMOVED***;\n```\n\n## Request Methods\n\nRequest Methods differ from Option Methods (See Below***REMOVED*** in that these methods transform, or handle the data in a sugared way, where as Option Methods require a more _hands on_ approach.\n\n#### Request.auth(Object***REMOVED*** or (user, pass, sendImmediately***REMOVED***\n\nAccepts either an `Object` containing `user`, `pass`, and optionally `sendImmediately`.\n\n- `user` (`String`***REMOVED*** - Authentication Username\n- `pass` (`String`***REMOVED*** - Authentication Password\n- `sendImmediately` (`String`***REMOVED*** - _Optional_; Defaults to `true`; Flag to determine whether Request should send the basic authentication header along with the request. Upon being _false_, Request will retry with a _proper_ authentication header after receiving a `401` response from the server (which must contain a `WWW-Authenticate` header indicating the required authentication method***REMOVED***\n\n**Object**\n\n```js\nRequest.auth({\n  user: 'Nijiko',\n  pass: 'insecure',\n  sendImmediately: true\n}***REMOVED***;\n```\n\n**Arguments**\n\n```\nRequest.auth('Nijiko', 'insecure', true***REMOVED***;\n```\n\n#### Request.header(Object***REMOVED*** or (field, value***REMOVED***\n\n**Suggested Method for setting Headers**\n\nAccepts either an `Object` containing `header-name: value` entries,\nor `field` and `value` arguments. Each entry is then stored in a two locations, one in the case-sensitive `Request.options.headers` and the other on a private `_headers` object that is case-insensitive for internal header lookup.\n\n- `field` (`String`***REMOVED*** - Header name, such as `Accepts`\n- `value` (`String`***REMOVED*** - Header value, such as `application/json` \n\n**Object**\n\n```js\nRequest.set({\n  'Accepts': 'application/json'\n, 'User-Agent': 'Unirest Node.js'\n}***REMOVED***\n```\n\n**Arguments**\n\n```\nRequest.set('Accepts', 'application/json'***REMOVED***;\n```\n\n#### Request.part(Object***REMOVED***\n\n**Experimental**\n\nSimiliar to `Request.multipart(***REMOVED***` except it only allows one object to be passed at a time and does the pre-processing on necessary `body` values for you.\n\nEach object is then appended to the `Request.options.multipart` array.\n\n```js\nRequest.part({\n  'content-type': 'application/json'\n, body: { foo: 'bar' }\n}***REMOVED***.part({\n  'content-type': 'text/html'\n, body: '<strong>Hello World!</strong>'\n}***REMOVED***;\n```\n\n#### Request.query(Object***REMOVED*** or (String***REMOVED***\n\nWhen `Object` is passed value is processed as a `querystring` representation, otherwise we directly use the `String` passed and append it to `Request.options.url`. If `Request.options.url` has a trailing `?` already, we append it with `& + value` otherwise we append as `? + value`\n\n```js\nunirest.post('http://httpbin.org/get'***REMOVED***\n.query('name=nijiko'***REMOVED***\n.query({\n  pet: 'spot'\n}***REMOVED***\n.end(function (response***REMOVED*** {\n  console.log(response***REMOVED***;\n}***REMOVED***;\n```\n\n#### Request.send(Object | String***REMOVED***\n\nEase of use method for setting the body without having to worry about processing the data for popular formats such as `JSON`, `Form Encoded`, otherwise the `body` is set on `Request.options` as the given value.\n\nBy default sending strings with no `Content-Type` preset will set `Content-Type` to `application/x-www-form-urlencoded`, and multiple calls will be concatenated with `&`. Otherwise multiple calls will be appended to the previous `body` value.\n\n**JSON**\n\n```js\nunirest.post('http://httpbin.org/post'***REMOVED***\n.type('json'***REMOVED***\n.send({\n  foo: 'bar',\n  hello: 3\n}***REMOVED***\n.end(function (response***REMOVED*** {\n  console.log(response.body***REMOVED***;\n}***REMOVED***\n```\n\n**FORM Encoded**\n\n```js\n// Body would be:\n// name=nijiko&pet=turtle\nunirest.post('http://httpbin.org/post'***REMOVED***\n.send('name=nijiko'***REMOVED***\n.send('pet=spot'***REMOVED***\n.end(function (response***REMOVED*** {\n  console.log(response.body***REMOVED***;\n}***REMOVED***;\n```\n\n**HTML / Other**\n\n```js\nunirest.post('http://httpbin.org/post'***REMOVED***\n.set('Content-Type', 'text/html'***REMOVED***\n.send('<strong>Hello World!</strong>'***REMOVED***\n.end(function (response***REMOVED*** {\n  console.log(response.body***REMOVED***;\n}***REMOVED***;\n```\n\n#### Request.type(String***REMOVED***\n\nSets the header `Content-Type` through either lookup for extensions (`xml`, `png`, `json`, etc...***REMOVED*** using `mime` or using the full value such as `application/json`. \n\nUses `Request.header(***REMOVED***` to set header value.\n\n```js\nRequest.type('application/json'***REMOVED*** // Content-Type: application/json\nRequest.type('json'***REMOVED*** // Content-Type: application/json\nRequest.type('html'***REMOVED*** // Content-Type: text/html\n…\n```\n\n## Request Form Methods\n\nThe following methods are sugar methods for attaching files, and form fields. Instead of handling files and processing them yourself Unirest can do that for you.\n\n#### Request.attach(Object***REMOVED*** or (name, path***REMOVED***\n\n`Object` should consist of `name: 'path'` otherwise use `name` and `path`.\n\n- `name` (`String`***REMOVED*** - File field name\n- `path` (`String` | `Object`***REMOVED*** - File value, A `String` will be parsed based on its value. If `path` contains `http` or `https` Request will handle it as a `remote file`, otherwise if it contains `://` and not `http` or `https` it will consider it to be a `direct file path`. If no `://` is found it will be considered a `relative file path`. An `Object` is directly set, so you can do pre-processing if you want without worrying about the string value.\n\n**Object**\n\n```js\nunirest.post('http://httpbin.org/post'***REMOVED***\n.headers({ 'Accept': 'application/json' }***REMOVED***\n.field({\n  'parameter': 'value'\n}***REMOVED***\n.attach({\n  'file': 'dog.png'\n, 'relative file': fs.createReadStream(path.join(__dirname, 'dog.png'***REMOVED***,\n, 'remote file': unirest.request('http://google.com/doodle.png'***REMOVED***\n}***REMOVED***\n.end(function (response***REMOVED*** {\n  console.log(response.body***REMOVED***;\n}***REMOVED***\n```\n\n**Arguments**\n\n```js\nunirest.post('http://httpbin.org/post'***REMOVED***\n.headers({ 'Accept': 'application/json' }***REMOVED***\n.field('parameter', 'value'***REMOVED*** // Form field\n.attach('file', 'dog.png'***REMOVED*** // Attachment\n.attach('remote file', fs.createReadStream(path.join(__dirname, 'dog.png'***REMOVED******REMOVED*** // Same as above.\n.attach('remote file', unirest.request('http://google.com/doodle.png'***REMOVED******REMOVED***\n.end(function (response***REMOVED*** {\n  console.log(response.body***REMOVED***;\n}***REMOVED***;\n```\n\n#### Request.field(Object***REMOVED*** or (name, value***REMOVED***\n\n`Object` should consist of `name: 'value'` otherwise use `name` and `value`\n\nSee `Request.attach` for usage.\n\n## Request.options\n\nThe _options_ `object` is where almost all of the request settings live. Each option method sugars to a field on this object to allow for chaining and ease of use. If \nyou have trouble with an option method and wish to directly access the _options_ object\nyou are free to do so.\n\nThis object is modeled after the `request` libraries options that are passed along through its constructor.\n\n* `url` (`String` | `Object`***REMOVED*** - Url, or object parsed from `url.parse(***REMOVED***`\n* `qs` (`Object`***REMOVED*** - Object consisting of `querystring` values to append to `url` upon request.\n* `method` (`String`***REMOVED*** - Default `GET`; HTTP Method.\n* `headers` (`Object`***REMOVED*** - Default `{}`; HTTP Headers.\n* `body` (`String` | `Object`***REMOVED*** - Entity body for certain requests.\n* `form` (`Object`***REMOVED*** - Form data.\n* `auth` (`Object`***REMOVED*** - See `Request.auth(***REMOVED***` below.\n* `multipart` (`Object`***REMOVED*** - _Experimental_; See documentation below.\n* `followRedirect` (`Boolean`***REMOVED*** - Default `true`; Follow HTTP `3xx` responses as redirects.\n* `followAllRedirects` (`Boolean`***REMOVED*** - Default `false`; Follow **Non**-GET HTTP `3xx` responses as redirects.\n* `maxRedirects` (`Number`***REMOVED*** - Default `10`; Maximum number of redirects before aborting.\n* `encoding` (`String`***REMOVED*** - Encoding to be used on `setEncoding` of response data.\n* `timeout` (`Number`***REMOVED*** - Number of milliseconds to wait before aborting.\n* `proxy` (`String`***REMOVED*** - See `Request.proxy(***REMOVED***` below.\n* `oauth` (`Object`***REMOVED*** - See `Request.oauth(***REMOVED***` below.\n* `hawk` (`Object`***REMOVED*** - See `Request.hawk(***REMOVED***` below\n* `strictSSL` (`Boolean`***REMOVED*** - Default `true`; See `Request.strictSSL(***REMOVED***` below.\n* `secureProtocol` (`String`***REMOVED*** - See `Request.secureProtocol(***REMOVED***` below.\n* `jar` (`Boolean` | `Jar`***REMOVED*** - See `Request.jar(***REMOVED***` below.\n* `aws` (`Object`***REMOVED*** - See `Request.aws(***REMOVED***` below.\n* `httpSignature` (`Object`***REMOVED*** - See `Request.httpSignature(***REMOVED***` Below.\n* `localAddress` (`String`***REMOVED*** - See `Request.localAddress(***REMOVED***` Below.\n* `pool` && `pool.maxSockets` - Advanced agent technology, that is supported.\n\n## Request Option Methods\n\n#### Request.url(String***REMOVED***\n\nSets `url` location of the current request on `Request.options` to the given `String`\n\n```js\nRequest.url('http://httpbin.org/get'***REMOVED***;\n```\n\n#### Request.method(String***REMOVED***\n\nSets `method` value on `Request.options` to the given value.\n\n```js\nRequest.method('HEAD'***REMOVED***;\n```\n\n#### Request.form(Object***REMOVED***\n\nSets `form` object on `Request.options` to the given object.\n\nWhen used `body` is set to the object passed as a `querystring` representation and the `Content-Type` header to `application/x-www-form-urlencoded; charset=utf-8`\n\n```js\nRequest.form({\n  key: 'value'\n}***REMOVED***;\n```\n\n#### Request.multipart(Array***REMOVED***\n\n**Experimental**\n\nSets `multipart` array containing multipart-form objects on `Request.options` to be sent along with the Request.\n\nEach objects property with the exclusion of `body` is treated as a header value. Each `body` value must be pre-processed if necessary when using this method.\n\n```js\nRequest.multipart([{\n  'content-type': 'application/json'\n, body: JSON.stringify({\n    foo: 'bar'\n***REMOVED******REMOVED***\n}, {\n  'content-type': 'text/html'\n, body: '<strong>Hello World!</strong>'\n}]***REMOVED***;\n```\n\n#### Request.maxRedirects(Number***REMOVED***\n\nSets `maxRedirects`, the number of redirects the current Request will follow, on `Request.options` based on the given value.\n\n```js\nRequest.maxRedirects(6***REMOVED***\n```\n\n#### Request.followRedirect(Boolean***REMOVED***\n\nSets `followRedirect` flag on `Request.options` for whether the current Request should follow HTTP redirects based on the given value.\n\n```js\nRequest.followRedirect(true***REMOVED***;\n```\n\n#### Request.timeout(Number***REMOVED***\n\nSets `timeout`, number of milliseconds Request should wait for a response before aborting, on `Request.options` based on the given value.\n\n```js\nRequest.timeout(2000***REMOVED***\n```\n\n#### Request.encoding(String***REMOVED***\n\nSets `encoding`, encoding to be used on setEncoding of response data if set to null, the body is returned as a Buffer, on `Request.options` based on given value.\n\n```js\nRequest.encoding('utf-8'***REMOVED***\n```\n\n#### Request.strictSSL(Boolean***REMOVED***\n\nSets `strictSSL` flag to require that SSL certificates be valid on `Request.options` based on given value.\n\n```js\nRequest.strictSSL(true***REMOVED***;\n``` \n\n#### Request.httpSignature(Object***REMOVED***\n\nSets `httpSignature` \n\n#### Request.proxy(String***REMOVED***\n\nSets `proxy`, HTTP Proxy to be set on `Request.options` based on value.\n\n```js\nRequest.proxy('http://localproxy.com'***REMOVED***;\n```\n\n#### Request.secureProtocol(String***REMOVED***\n\nSets the secure protocol to use:\n\n```js\nRequest.secureProtocol('SSLv2_method'***REMOVED***;\n// or \nRequest.secureProtocol('SSLv3_client_method'***REMOVED***;\n```\n\nSee [openssl.org](https://www.openssl.org/docs/ssl/SSL_CTX_new.html***REMOVED*** for all possible values.\n\n#### Request.aws(Object***REMOVED***\n\nSets `aws`, AWS Signing Credentials, on `Request.options`\n\n```js\nRequest.aws({ \n  key: 'AWS_S3_KEY'\n, secret: 'AWS_S3_SECRET'\n, bucket: 'BUCKET NAME'\n}***REMOVED***;\n```\n\n#### Request.oauth(Object***REMOVED***\n\nSets `oauth`, list of oauth credentials, on `Request.options` based on given object.\n\n```js\nvar Request = unirest.get('https://api.twitter.com/oauth/request_token'***REMOVED***;\n\nRequest.oauth({\n  callback: 'http://mysite.com/callback/'\n, consumer_key: 'CONSUMER_KEY'\n, consumer_secret: 'CONSUMER_SECRET'\n}***REMOVED***.end(function (response***REMOVED*** {\n  var access_token = response.body;\n  \n  Request = unirest.post('https://api.twitter.com/oauth/access_token'***REMOVED***;\n  Request.oauth({\n    consumer_key: 'CONSUMER_KEY'\n  , consumer_secret: 'CONSUMER_SECRET'\n  , token: access_token.oauth_token\n  , verifier: token: access_token.oauth_verifier\n***REMOVED******REMOVED***.end(function (response***REMOVED*** {\n    var token = response.body;\n    \n    Request = unirest.get('https://api.twitter.com/1/users/show.json'***REMOVED***;\n    Request.oauth({\n      consumer_key: 'CONSUMER_KEY'\n    , consumer_secret: 'CONSUMER_SECRET'\n    , token: token.oauth_token\n    , token_secret: token.oauth_token_secret\n  ***REMOVED******REMOVED***.query({\n      screen_name: token.screen_name\n    , user_id: token.user_id\n  ***REMOVED******REMOVED***.end(function (response***REMOVED*** {\n      console.log(response.body***REMOVED***;\n  ***REMOVED******REMOVED***;\n***REMOVED******REMOVED***\n}***REMOVED***;\n```\n\n#### Request.hawk(Object***REMOVED***\n\nSets `hawk` object on `Request.options` to the given object.\n\nHawk requires a field `credentials` as seen in their [documentation](https://github.com/hueniverse/hawk#usage-example***REMOVED***, and below.\n\n```js\nRequest.hawk({\n  credentials: {\n    key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn'\n  , algorithm: 'sha256'\n  , user: 'Steve'\n***REMOVED***\n}***REMOVED***;\n```\n\n#### Request.localAddress(String***REMOVED***\n\nSets `localAddress`, local interface to bind for network connections, on `Request.options`\n\n```js\nRequest.localAddress('127.0.0.1'***REMOVED***;\nRequest.localAddress('1.2.3.4'***REMOVED***;\n```\n\n#### Request.jar(Boolean***REMOVED*** or Request.jar(Jar***REMOVED***\n\nSets `jar`, cookie container, on `Request.options`. When set to `true` it stores cookies for future usage.\n\nSee `unirest.jar` for more information on how to use `Jar` argument.\n\n## Request Aliases\n\n#### Request.set\n\n**Alias** for `Request.header(***REMOVED***`\n\n#### Request.headers\n\n**Alias** for `Request.header(***REMOVED***`\n\n#### Request.redirects\n\n**Alias** for `Request.maxRedirects(***REMOVED***`\n\n#### Request.redirect\n\n**Alias** for `Request.followRedirect(***REMOVED***`\n\n#### Request.ssl\n\n**Alias** for `Request.strictSSL(***REMOVED***`\n\n#### Request.ip\n\n**Alias** for `Request.localAddress(***REMOVED***`\n\n#### Request.complete\n\n**Alias** for `Request.end(***REMOVED***`\n\n#### Request.as.json\n\n**Alias** for `Request.end(***REMOVED***`\n\n#### Request.as.binary\n\n**Alias** for `Request.end(***REMOVED***`\n\n#### Request.as.string\n\n**Alias** for `Request.end(***REMOVED***`\n\n# Response\n\nUpon ending a request, and recieving a Response the object that is returned contains a number of helpful properties to ease coding pains.\n\n## General\n\n\n- `body` (`Mixed`***REMOVED*** - Processed body data\n- `raw_body` (`Mixed`***REMOVED*** - Unprocessed body data\n- `headers` (`Object`***REMOVED*** - Header details\n- `cookies` (`Object`***REMOVED*** - Cookies from `set-cookies`, and `cookie` headers.\n- `httpVersion` (`String`***REMOVED*** - Server http version. (e.g. 1.1***REMOVED***\n- `httpVersionMajor` (`Number`***REMOVED*** - Major number (e.g. 1***REMOVED***\n- `httpVersionMinor` (`Number`***REMOVED*** - Minor number (e.g. 1***REMOVED***\n- `url` (`String`***REMOVED*** - Dependant on input, can be empty.\n- `domain` (`String` | `null`***REMOVED*** - Dependant on input, can be empty.\n- `method` (`String` | `null`***REMOVED*** - Method used, dependant on input.\n- `client` (`Object`***REMOVED*** - Client Object. Detailed information regarding the Connection and Byte throughput.\n- `connection` (`Object`***REMOVED*** - Client Object. Specific connection object, useful for events such as errors. **Advanced**\n- `socket` (`Object`***REMOVED*** Client Object. Socket specific object and information. Most throughput is same across all three client objects.\n- `request` (`Object`***REMOVED*** - Initial request object.\n- `setEncoding` (`Function`***REMOVED*** - Set encoding type.\n\n## Status Information\n\n- `code` (`Number`***REMOVED*** - Status Code, i.e. `200`\n- `status` (`Number`***REMOVED*** - Status Code, same as above.\n- `statusType` (`Number`***REMOVED*** - Status Code Range Type\n  - `1` - Info\n  - `2` - Ok\n  - `3` - Miscellaneous\n  - `4` - Client Error\n  - `5` - Server Error\n- `info` (`Boolean`***REMOVED*** - Status Range Info?\n- `ok` (`Boolean`***REMOVED*** - Status Range Ok?\n- `clientError` (`Boolean`***REMOVED*** - Status Range Client Error?\n- `serverError` (`Boolean`***REMOVED*** - Status Range Server Error?\n- `accepted` (`Boolean`***REMOVED*** - Status Code `202`?\n- `noContent` (`Boolean`***REMOVED*** - Status Code `204` or `1223`?\n- `badRequest` (`Boolean`***REMOVED*** - Status Code `400`?\n- `unauthorized` (`Boolean`***REMOVED*** - Status Code `401`?\n- `notAcceptable` (`Boolean`***REMOVED*** - Status Code `406`?\n- `notFound` (`Boolean`***REMOVED*** - Status Code `404`?\n- `forbidden` (`Boolean`***REMOVED*** - Status Code `403`?\n- `error` (`Boolean` | `Object`***REMOVED*** - Dependant on status code range.\n\n## response.cookie(name***REMOVED***\n\nSugar method for retrieving a cookie from the `response.cookies` object.\n\n\n```js\nvar CookieJar = unirest.jar(***REMOVED***;\nCookieJar.add(unirest.cookie('another cookie=23'***REMOVED******REMOVED***;\n\nunirest.get('http://google.com'***REMOVED***.jar(CookieJar***REMOVED***.end(function (response***REMOVED*** {\n  // Except google trims the value passed :/\n  console.log(response.cookie('another cookie'***REMOVED******REMOVED***;\n}***REMOVED***;\n```\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/Mashape/unirest-nodejs",
  "_id": "unirest@0.2.0",
  "dist": {
    "shasum": "6538c40514e5dccb2f835d6bdfa884cf3b1c0f0b"
***REMOVED***,
  "_from": "unirest@",
  "_resolved": "https://registry.npmjs.org/unirest/-/unirest-0.2.0.tgz"
}
