var should = require("should"***REMOVED***;
var unirest = require('../index'***REMOVED***;

describe('Unirest', function (***REMOVED*** {
  describe('GET request', function (***REMOVED*** {
    it('should correctly parse JSON.', function (done***REMOVED*** {
      unirest.get('http://httpbin.org/get'***REMOVED***.end(function (response***REMOVED*** {
        should(response.status***REMOVED***.equal(200***REMOVED***;
        should(response.body***REMOVED***.have.type('object'***REMOVED***;
        done(***REMOVED***;
    ***REMOVED******REMOVED***;
  ***REMOVED******REMOVED***;

    it('should correctly parse GZIPPED data.', function (done***REMOVED*** {
      unirest.get('http://httpbin.org/gzip'***REMOVED***.set('Accept', 'gzip'***REMOVED***.end(function (response***REMOVED*** {
        should(response.status***REMOVED***.equal(200***REMOVED***;
        should(response.body***REMOVED***.have.type('object'***REMOVED***;
        done(***REMOVED***;
    ***REMOVED******REMOVED***;
  ***REMOVED******REMOVED***;

    it('should correctly handle redirects.', function (done***REMOVED*** {
      unirest.get('http://httpbin.org/redirect/3'***REMOVED***.timeout(2500***REMOVED***.end(function (response***REMOVED*** {
        should(response.status***REMOVED***.equal(200***REMOVED***;
        should(response.body.url***REMOVED***.equal('http://httpbin.org/get'***REMOVED***;
        done(***REMOVED***;
    ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***;

    it('should correctly handle timeouts.', function (done***REMOVED*** {
      unirest.get('http://httpbin.org/redirect/3'***REMOVED***.timeout(20***REMOVED***.end(function (response***REMOVED*** {
        response.error.should.exist;
        response.error.code.should.equal('ETIMEDOUT'***REMOVED***;
        done(***REMOVED***;
    ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***;

    it('should correctly handle refused connections.', function (done***REMOVED*** {
      unirest.get('http://localhost:9999'***REMOVED***.timeout(200***REMOVED***.end(function (response***REMOVED*** {
        response.error.should.exist;
        response.error.code.should.equal('ECONNREFUSED'***REMOVED***;
        done(***REMOVED***;
    ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***;

    it('should be able to look like unirest-php', function (done***REMOVED*** {
      unirest.get('http://httpbin.org/gzip', { 'Accept': 'gzip' }, 'Hello World', function (response***REMOVED*** {
        should(response.status***REMOVED***.equal(200***REMOVED***;
        should(response.body***REMOVED***.have.type('object'***REMOVED***;
        done(***REMOVED***;
    ***REMOVED******REMOVED***;
  ***REMOVED******REMOVED***;
***REMOVED******REMOVED***;

  describe('POST request', function (***REMOVED*** {
    it('should correctly post FORM data.', function (done***REMOVED*** {
      var data = {
        is: 'unirest',
        my: 'name',
        hello: 'world'
    ***REMOVED***;

      unirest.post('http://httpbin.org/post'***REMOVED***.send(data***REMOVED***.end(function (response***REMOVED*** {
        should(response.status***REMOVED***.equal(200***REMOVED***;
        should(response.body.form***REMOVED***.have.type('object'***REMOVED***;
        should(response.body.headers['Content-Length']***REMOVED***.equal('30'***REMOVED***;
        should(response.body.headers['Content-Type']***REMOVED***.equal('application/x-www-form-urlencoded'***REMOVED***;
        done(***REMOVED***;
    ***REMOVED******REMOVED***;
  ***REMOVED******REMOVED***;

    it('should correctly post JSON data.', function (done***REMOVED*** {
      var data = {
        is: 'unirest',
        my: 'name',
        hello: 'world'
    ***REMOVED***;

      unirest.post('http://httpbin.org/post'***REMOVED***.header('content-type', 'application/json'***REMOVED***.send(data***REMOVED***.end(function (response***REMOVED*** {
        should(response.status***REMOVED***.equal(200***REMOVED***;
        should(response.body.data***REMOVED***.have.type('string'***REMOVED***;
        should(response.body.headers['Content-Type']***REMOVED***.equal('application/json'***REMOVED***;
        done(***REMOVED***;
    ***REMOVED******REMOVED***;
  ***REMOVED******REMOVED***;

    it('should check for buffers', function (done***REMOVED*** {
      unirest.post('http://httpbin.org/post'***REMOVED***
      .headers({ 'Accept': 'application/json' }***REMOVED***
      .send(new Buffer([1,2,3]***REMOVED******REMOVED***
      .end(function (response***REMOVED*** {
        should(response.body.json***REMOVED***.exist;
        done(***REMOVED***;
    ***REMOVED******REMOVED***;
  ***REMOVED******REMOVED***;
***REMOVED******REMOVED***;
}***REMOVED***;