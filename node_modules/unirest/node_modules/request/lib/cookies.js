var optional = require('./optional'***REMOVED***
  , tough = optional('tough-cookie'***REMOVED***
  , Cookie = tough && tough.Cookie
  , CookieJar = tough && tough.CookieJar
  ;

exports.parse = function(str***REMOVED*** {
  if (str && str.uri***REMOVED*** str = str.uri
  if (typeof str !== 'string'***REMOVED*** throw new Error("The cookie function only accepts STRING as param"***REMOVED***
  if (!Cookie***REMOVED*** {
    return null;
***REMOVED***
  return Cookie.parse(str***REMOVED***
};

// Adapt the sometimes-Async api of tough.CookieJar to our requirements
function RequestJar(***REMOVED*** {
  this._jar = new CookieJar(***REMOVED***;
}
RequestJar.prototype.setCookie = function(cookieOrStr, uri, options***REMOVED*** {
  return this._jar.setCookieSync(cookieOrStr, uri, options || {}***REMOVED***;
};
RequestJar.prototype.getCookieString = function(uri***REMOVED*** {
  return this._jar.getCookieStringSync(uri***REMOVED***;
};

exports.jar = function(***REMOVED*** {
  if (!CookieJar***REMOVED*** {
    // tough-cookie not loaded, return a stub object:
    return {
      setCookie: function(***REMOVED***{},
      getCookieString: function(***REMOVED***{}
  ***REMOVED***;
***REMOVED***
  return new RequestJar(***REMOVED***;
};
