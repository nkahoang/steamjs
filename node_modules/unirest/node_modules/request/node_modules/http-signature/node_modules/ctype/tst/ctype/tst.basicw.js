/*
 * Simple does it fucking work at all test
 */

var mod_ctype = require('../../ctype'***REMOVED***;
var ASSERT = require('assert'***REMOVED***;
var mod_sys = require('sys'***REMOVED***;

function test(***REMOVED***
{
	var ii, p, buffer, buf2;

	p = new mod_ctype.Parser({ endian: 'big' }***REMOVED***;
	buffer = new Buffer(4***REMOVED***;
	p.writeData([ { x: { type: 'uint8_t', value: 23 }},
	    { y: { type: 'uint8_t', offset: 3, value: 42 }}
	], buffer, 0***REMOVED***;
	ASSERT.equal(23, buffer[0]***REMOVED***;
	ASSERT.equal(42, buffer[3]***REMOVED***;

	buffer = new Buffer(20***REMOVED***;
	for (ii = 0; ii < 20; ii++***REMOVED***
		buffer[ii] = 0;

	buffer.write('Hello, world!'***REMOVED***;
	buf2 = new Buffer(22***REMOVED***;
	p.writeData([ { x: { type: 'char[20]', value: buffer }} ], buf2, 0***REMOVED***;
	for (ii = 0; ii < 20; ii++***REMOVED***
		ASSERT.equal(buffer[ii], buf2[ii]***REMOVED***;
	/*
	 * This is currently broken behvaior, need to redesign check
	 * ASSERT.equal('Hello, world!', result['x'].toString('utf-8', 0,
	 *   result['x'].length***REMOVED******REMOVED***;
	 */

	buffer = new Buffer(4***REMOVED***;
	p.writeData([ { y: { type: 'uint8_t', value: 3 }},
	    { x: { type: 'uint8_t[y]', value: [ 0x24, 0x25, 0x26] }}],
	    buffer, 0***REMOVED***;
	console.log(mod_sys.inspect(buffer***REMOVED******REMOVED***;

	p.typedef('ssize_t', 'int32_t'***REMOVED***;
	ASSERT.deepEqual({ 'ssize_t': 'int32_t' }, p.lstypes(***REMOVED******REMOVED***;
}
