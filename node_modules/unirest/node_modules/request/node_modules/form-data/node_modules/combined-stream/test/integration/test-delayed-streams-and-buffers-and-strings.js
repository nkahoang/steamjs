var common = require('../common'***REMOVED***;
var assert = common.assert;
var CombinedStream = common.CombinedStream;
var fs = require('fs'***REMOVED***;

var FILE1 = common.dir.fixture + '/file1.txt';
var BUFFER = new Buffer('Bacon is delicious'***REMOVED***;
var FILE2 = common.dir.fixture + '/file2.txt';
var STRING = 'The â‚¬ kicks the $\'s ass!';

var EXPECTED =
  fs.readFileSync(FILE1***REMOVED***
  + BUFFER
  + fs.readFileSync(FILE2***REMOVED***
  + STRING;
var GOT;

(function testDelayedStreams(***REMOVED*** {
  var combinedStream = CombinedStream.create(***REMOVED***;
  combinedStream.append(fs.createReadStream(FILE1***REMOVED******REMOVED***;
  combinedStream.append(BUFFER***REMOVED***;
  combinedStream.append(fs.createReadStream(FILE2***REMOVED******REMOVED***;
  combinedStream.append(function(next***REMOVED*** {
    next(STRING***REMOVED***;
***REMOVED******REMOVED***;

  var tmpFile = common.dir.tmp + '/combined-file1-buffer-file2-string.txt';
  var dest = fs.createWriteStream(tmpFile***REMOVED***;
  combinedStream.pipe(dest***REMOVED***;

  dest.on('close', function(***REMOVED*** {
    GOT = fs.readFileSync(tmpFile, 'utf8'***REMOVED***;
***REMOVED******REMOVED***;
}***REMOVED***(***REMOVED***;

process.on('exit', function(***REMOVED*** {
  assert.strictEqual(GOT, EXPECTED***REMOVED***;
}***REMOVED***;
