{
  "author": {
    "name": "Felix Geisendörfer",
    "email": "felix@debuggable.com",
    "url": "http://debuggable.com/"
***REMOVED***,
  "name": "form-data",
  "description": "A module to create readable \"multipart/form-data\" streams.  Can be used to submit forms and file uploads to other web applications.",
  "version": "0.1.2",
  "repository": {
    "type": "git",
    "url": "git://github.com/felixge/node-form-data.git"
***REMOVED***,
  "main": "./lib/form_data",
  "scripts": {
    "test": "node test/run.js"
***REMOVED***,
  "engines": {
    "node": ">= 0.6"
***REMOVED***,
  "dependencies": {
    "combined-stream": "~0.0.4",
    "mime": "~1.2.11",
    "async": "~0.2.9"
***REMOVED***,
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/felixge/node-form-data/master/License"
  ***REMOVED***
  ],
  "devDependencies": {
    "fake": "~0.2.2",
    "far": "~0.0.7",
    "formidable": "~1.0.14",
    "request": "~2.27.0"
***REMOVED***,
  "readme": "# Form-Data [![Build Status](https://travis-ci.org/felixge/node-form-data.png?branch=master***REMOVED***](https://travis-ci.org/felixge/node-form-data***REMOVED*** [![Dependency Status](https://gemnasium.com/felixge/node-form-data.png***REMOVED***](https://gemnasium.com/felixge/node-form-data***REMOVED***\n\nA module to create readable ```\"multipart/form-data\"``` streams. Can be used to submit forms and file uploads to other web applications.\n\nThe API of this module is inspired by the [XMLHttpRequest-2 FormData Interface][xhr2-fd].\n\n[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface\n[streams2-thing]: http://nodejs.org/api/stream.html#stream_compatibility_with_older_node_versions\n\n## Install\n\n```\nnpm install form-data\n```\n\n## Usage\n\nIn this example we are constructing a form with 3 fields that contain a string,\na buffer and a file stream.\n\n``` javascript\nvar FormData = require('form-data'***REMOVED***;\nvar fs = require('fs'***REMOVED***;\n\nvar form = new FormData(***REMOVED***;\nform.append('my_field', 'my value'***REMOVED***;\nform.append('my_buffer', new Buffer(10***REMOVED******REMOVED***;\nform.append('my_file', fs.createReadStream('/foo/bar.jpg'***REMOVED******REMOVED***;\n```\n\nAlso you can use http-response stream:\n\n``` javascript\nvar FormData = require('form-data'***REMOVED***;\nvar ***REMOVED***;\n\nvar form = new FormData(***REMOVED***;\n\nhttp.request('http://nodejs.org/images/logo.png', function(response***REMOVED*** {\n  form.append('my_field', 'my value'***REMOVED***;\n  form.append('my_buffer', new Buffer(10***REMOVED******REMOVED***;\n  form.append('my_logo', response***REMOVED***;\n}***REMOVED***;\n```\n\nOr @mikeal's request stream:\n\n``` javascript\nvar FormData = require('form-data'***REMOVED***;\nvar request = require('request'***REMOVED***;\n\nvar form = new FormData(***REMOVED***;\n\nform.append('my_field', 'my value'***REMOVED***;\nform.append('my_buffer', new Buffer(10***REMOVED******REMOVED***;\nform.append('my_logo', request('http://nodejs.org/images/logo.png'***REMOVED******REMOVED***;\n```\n\nIn order to submit this form to a web application, call ```submit(url, [callback]***REMOVED***``` method:\n\n``` javascript\nform.submit('http://example.org/', function(err, res***REMOVED*** {\n  // res – response object (http.IncomingMessage***REMOVED***  //\n  res.resume(***REMOVED***; // for node-0.10.x\n}***REMOVED***;\n\n```\n\nFor more advanced request manipulations ```submit(***REMOVED***``` method returns ```http.ClientRequest``` object, or you can choose from one of the alternative submission methods.\n\n### Alternative submission methods\n\nYou can use node's http client interface:\n\n``` javascript\nvar ***REMOVED***;\n\nvar request = http.request({\n  method: 'post',\n  host: 'example.org',\n  path: '/upload',\n  headers: form.getHeaders(***REMOVED***\n}***REMOVED***;\n\nform.pipe(request***REMOVED***;\n\nrequest.on('response', function(res***REMOVED*** {\n  console.log(res.statusCode***REMOVED***;\n}***REMOVED***;\n```\n\nOr if you would prefer the `'Content-Length'` header to be set for you:\n\n``` javascript\nform.submit('example.org/upload', function(err, res***REMOVED*** {\n  console.log(res.statusCode***REMOVED***;\n}***REMOVED***;\n```\n\nTo use custom headers and pre-known length in parts:\n\n``` javascript\nvar CRLF = '\\r\\n';\nvar form = new FormData(***REMOVED***;\n\nvar options = {\n  header: CRLF + '--' + form.getBoundary(***REMOVED*** + CRLF + 'X-Custom-Header: 123' + CRLF + CRLF,\n  knownLength: 1\n};\n\nform.append('my_buffer', buffer, options***REMOVED***;\n\nform.submit('http://example.com/', function(err, res***REMOVED*** {\n  if (err***REMOVED*** throw err;\n  console.log('Done'***REMOVED***;\n}***REMOVED***;\n```\n\nForm-Data can recognize and fetch all the required information from common types of streams (```fs.readStream```, ```http.response``` and ```mikeal's request```***REMOVED***, for some other types of streams you'd need to provide \"file\"-related information manually:\n\n``` javascript\nsomeModule.stream(function(err, stdout, stderr***REMOVED*** {\n  if (err***REMOVED*** throw err;\n\n  var form = new FormData(***REMOVED***;\n\n  form.append('file', stdout, {\n    filename: 'unicycle.jpg',\n    contentType: 'image/jpg',\n    knownLength: 19806\n***REMOVED******REMOVED***;\n\n  form.submit('http://example.com/', function(err, res***REMOVED*** {\n    if (err***REMOVED*** throw err;\n    console.log('Done'***REMOVED***;\n***REMOVED******REMOVED***;\n}***REMOVED***;\n```\n\nFor edge cases, like POST request to URL with query string or to pass HTTP auth credentials, object can be passed to `form.submit(***REMOVED***` as first parameter:\n\n``` javascript\nform.submit({\n  host: 'example.com',\n  path: '/probably.php?extra=params',\n  auth: 'username:password'\n}, function(err, res***REMOVED*** {\n  console.log(res.statusCode***REMOVED***;\n}***REMOVED***;\n```\n\n## Notes\n\n- ```getLengthSync(***REMOVED***``` method DOESN'T calculate length for streams, use ```knownLength``` options as workaround.\n- If it feels like FormData hangs after submit and you're on ```node-0.10```, please check [Compatibility with Older Node Versions][streams2-thing]\n\n## TODO\n\n- Add new streams (0.10***REMOVED*** support and try really hard not to break it for 0.8.x.\n\n## License\n\nForm-Data is licensed under the MIT license.\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/felixge/node-form-data/issues"
***REMOVED***,
  "homepage": "https://github.com/felixge/node-form-data",
  "_id": "form-data@0.1.2",
  "_from": "form-data@~0.1.0"
}
