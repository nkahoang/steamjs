{
  "author": {
    "name": "Robert Kieffer",
    "email": "robert@broofa.com",
    "url": "http://github.com/broofa"
***REMOVED***,
  "contributors": [
    {
      "name": "Benjamin Thomas",
      "email": "benjamin@benjaminthomas.org",
      "url": "http://github.com/bentomas"
  ***REMOVED***
  ],
  "dependencies": {},
  "description": "A comprehensive library for mime-type mapping",
  "devDependencies": {},
  "keywords": [
    "util",
    "mime"
  ],
  "main": "mime.js",
  "name": "mime",
  "repository": {
    "url": "https://github.com/broofa/node-mime",
    "type": "git"
***REMOVED***,
  "version": "1.2.11",
  "readme": "# mime\n\nComprehensive MIME type mapping API. Includes all 600+ types and 800+ extensions defined by the Apache project, plus additional types submitted by the node.js community.\n\n## Install\n\nInstall with [npm](http://github.com/isaacs/npm***REMOVED***:\n\n    npm install mime\n\n## API - Queries\n\n### mime.lookup(path***REMOVED***\nGet the mime type associated with a file, if no mime type is found `application/octet-stream` is returned. Performs a case-insensitive lookup using the extension in `path` (the substring after the last '/' or '.'***REMOVED***.  E.g.\n\n    var mime = require('mime'***REMOVED***;\n\n    mime.lookup('/path/to/file.txt'***REMOVED***;         // => 'text/plain'\n    mime.lookup('file.txt'***REMOVED***;                  // => 'text/plain'\n    mime.lookup('.TXT'***REMOVED***;                      // => 'text/plain'\n    mime.lookup('htm'***REMOVED***;                       // => 'text/html'\n\n### mime.default_type\nSets the mime type returned when `mime.lookup` fails to find the extension searched for. (Default is `application/octet-stream`.***REMOVED***\n\n### mime.extension(type***REMOVED***\nGet the default extension for `type`\n\n    mime.extension('text/html'***REMOVED***;                 // => 'html'\n    mime.extension('application/octet-stream'***REMOVED***;  // => 'bin'\n\n### mime.charsets.lookup(***REMOVED***\n\nMap mime-type to charset\n\n    mime.charsets.lookup('text/plain'***REMOVED***;        // => 'UTF-8'\n\n(The logic for charset lookups is pretty rudimentary.  Feel free to suggest improvements.***REMOVED***\n\n## API - Defining Custom Types\n\nThe following APIs allow you to add your own type mappings within your project.  If you feel a type should be included as part of node-mime, see [requesting new types](https://github.com/broofa/node-mime/wiki/Requesting-New-Types***REMOVED***.\n\n### mime.define(***REMOVED***\n\nAdd custom mime/extension mappings\n\n    mime.define({\n        'text/x-some-format': ['x-sf', 'x-sft', 'x-sfml'],\n        'application/x-my-type': ['x-mt', 'x-mtt'],\n        // etc ...\n  ***REMOVED******REMOVED***;\n\n    mime.lookup('x-sft'***REMOVED***;                 // => 'text/x-some-format'\n\nThe first entry in the extensions array is returned by `mime.extension(***REMOVED***`. E.g.\n\n    mime.extension('text/x-some-format'***REMOVED***; // => 'x-sf'\n\n### mime.load(filepath***REMOVED***\n\nLoad mappings from an Apache \".types\" format file\n\n    mime.load('./my_project.types'***REMOVED***;\n\nThe .types file format is simple -  See the `types` dir for examples.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/broofa/node-mime/issues"
***REMOVED***,
  "homepage": "https://github.com/broofa/node-mime",
  "_id": "mime@1.2.11",
  "_from": "mime@~1.2.11"
}
