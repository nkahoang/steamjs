var redis = require("redis"***REMOVED***,
    client1 = redis.createClient(***REMOVED***, msg_count = 0,
    client2 = redis.createClient(***REMOVED***;

redis.debug_mode = false;

// Most clients probably don't do much on "subscribe".  This example uses it to coordinate things within one program.
client1.on("subscribe", function (channel, count***REMOVED*** {
    console.log("client1 subscribed to " + channel + ", " + count + " total subscriptions"***REMOVED***;
    if (count === 2***REMOVED*** {
        client2.publish("a nice channel", "I am sending a message."***REMOVED***;
        client2.publish("another one", "I am sending a second message."***REMOVED***;
        client2.publish("a nice channel", "I am sending my last message."***REMOVED***;
  ***REMOVED***
}***REMOVED***;

client1.on("unsubscribe", function (channel, count***REMOVED*** {
    console.log("client1 unsubscribed from " + channel + ", " + count + " total subscriptions"***REMOVED***;
    if (count === 0***REMOVED*** {
        client2.end(***REMOVED***;
        client1.end(***REMOVED***;
  ***REMOVED***
}***REMOVED***;

client1.on("message", function (channel, message***REMOVED*** {
    console.log("client1 channel " + channel + ": " + message***REMOVED***;
    msg_count += 1;
    if (msg_count === 3***REMOVED*** {
        client1.unsubscribe(***REMOVED***;
  ***REMOVED***
}***REMOVED***;

client1.on("ready", function (***REMOVED*** {
    // if you need auth, do it here
    client1.incr("did a thing"***REMOVED***;
    client1.subscribe("a nice channel", "another one"***REMOVED***;
}***REMOVED***;

client2.on("ready", function (***REMOVED*** {
    // if you need auth, do it here
}***REMOVED***;
