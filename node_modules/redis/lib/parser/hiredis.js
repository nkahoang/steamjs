var events = require("events"***REMOVED***,
    util = require("../util"***REMOVED***,
    hiredis = require("hiredis"***REMOVED***;

exports.debug_mode = false;
exports.name = "hiredis";

function HiredisReplyParser(options***REMOVED*** {
    this.name = exports.name;
    this.options = options || {};
    this.reset(***REMOVED***;
    events.EventEmitter.call(this***REMOVED***;
}

util.inherits(HiredisReplyParser, events.EventEmitter***REMOVED***;

exports.Parser = HiredisReplyParser;

HiredisReplyParser.prototype.reset = function (***REMOVED*** {
    this.reader = new hiredis.Reader({
        return_buffers: this.options.return_buffers || false
  ***REMOVED******REMOVED***;
};

HiredisReplyParser.prototype.execute = function (data***REMOVED*** {
    var reply;
    this.reader.feed(data***REMOVED***;
    while (true***REMOVED*** {
        try {
            reply = this.reader.get(***REMOVED***;
      ***REMOVED*** catch (err***REMOVED*** {
            this.emit("error", err***REMOVED***;
            break;
      ***REMOVED***

        if (reply === undefined***REMOVED*** {
            break;
      ***REMOVED***

        if (reply && reply.constructor === Error***REMOVED*** {
            this.emit("reply error", reply***REMOVED***;
      ***REMOVED*** else {
            this.emit("reply", reply***REMOVED***;
      ***REMOVED***
  ***REMOVED***
};
