{
  "name": "with",
  "version": "3.0.0",
  "description": "Compile time `with` for strict mode JavaScript",
  "main": "index.js",
  "scripts": {
    "test": "mocha -R spec"
***REMOVED***,
  "repository": {
    "type": "git",
    "url": "https://github.com/ForbesLindesay/with.git"
***REMOVED***,
  "author": {
    "name": "ForbesLindesay"
***REMOVED***,
  "license": "MIT",
  "dependencies": {
    "uglify-js": "~2.4.12"
***REMOVED***,
  "devDependencies": {
    "mocha": "~1.12.0"
***REMOVED***,
  "readme": "# with\r\n\r\nCompile time `with` for strict mode JavaScript\r\n\r\n[![build status](https://secure.travis-ci.org/ForbesLindesay/with.png***REMOVED***](http://travis-ci.org/ForbesLindesay/with***REMOVED***\r\n[![Dependency Status](https://gemnasium.com/ForbesLindesay/with.png***REMOVED***](https://gemnasium.com/ForbesLindesay/with***REMOVED***\r\n[![NPM version](https://badge.fury.io/js/with.png***REMOVED***](http://badge.fury.io/js/with***REMOVED***\r\n\r\n## Installation\r\n\r\n    $ npm install with\r\n\r\n## Usage\r\n\r\n```js\r\nvar addWith = require('with'***REMOVED***\r\n\r\naddWith('obj', 'console.log(a***REMOVED***'***REMOVED***\r\n// => ';(function (console, a***REMOVED*** {\r\n//       console.log(a***REMOVED***\r\n//   ***REMOVED***(\"console\" in obj ? obj.console :\r\n//                          typeof console!==\"undefined\" ? console : undefined,\r\n//       \"a\" in obj ? obj.a :\r\n//                    typeof a !== \"undefined\" ? a : undefined***REMOVED******REMOVED***;'\r\n\r\naddWith('obj', 'console.log(a***REMOVED***', ['console']***REMOVED***\r\n// => ';(function (console, a***REMOVED*** {\r\n//       console.log(a***REMOVED***\r\n//   ***REMOVED***(\"a\" in obj ? obj.a :\r\n//                    typeof a !== \"undefined\" ? a : undefined***REMOVED******REMOVED***;'\r\n```\r\n\r\n## API\r\n\r\n### addWith(obj, src[, exclude]***REMOVED***\r\n\r\nThe idea is that this is roughly equivallent to:\r\n\r\n```js\r\nwith (obj***REMOVED*** {\r\n  src\r\n}\r\n```\r\n\r\nThere are a few differences though.  For starters, assignments to variables will always remain contained within the with block.\r\n\r\ne.g.\r\n\r\n```js\r\nvar foo = 'foo'\r\nwith ({}***REMOVED*** {\r\n  foo = 'bar'\r\n}\r\nassert(foo === 'bar'***REMOVED***// => This fails for compile time with but passes for native with\r\n\r\nvar obj = {foo: 'foo'}\r\nwith ({}***REMOVED*** {\r\n  foo = 'bar'\r\n}\r\nassert(obj.foo === 'bar'***REMOVED***// => This fails for compile time with but passes for native with\r\n```\r\n\r\nIt also makes everything be declared, so you can always do:\r\n\r\n```js\r\nif (foo === undefined***REMOVED***\r\n```\r\n\r\ninstead of\r\n\r\n```js\r\nif (typeof foo === 'undefined'***REMOVED***\r\n```\r\n\r\nThis is not the case if foo is in `exclude`.  If a variable is excluded, we ignore it entirely.  This is useful if you know a variable will be global as it can lead to efficiency improvements.\r\n\r\nIt is also safe to use in strict mode (unlike `with`***REMOVED*** and it minifies properly (`with` disables virtually all minification***REMOVED***.\r\n\r\n## License\r\n\r\n  MIT",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ForbesLindesay/with/issues"
***REMOVED***,
  "homepage": "https://github.com/ForbesLindesay/with",
  "_id": "with@3.0.0",
  "dist": {
    "shasum": "4abdd744f3acf886a8b125f8c7c6d6f131d3591f"
***REMOVED***,
  "_from": "with@~3.0.0",
  "_resolved": "https://registry.npmjs.org/with/-/with-3.0.0.tgz"
}
