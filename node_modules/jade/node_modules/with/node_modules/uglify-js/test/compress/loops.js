while_becomes_for: {
    options = { loops: true };
    input: {
        while (foo(***REMOVED******REMOVED*** bar(***REMOVED***;
  ***REMOVED***
    expect: {
        for (; foo(***REMOVED***; ***REMOVED*** bar(***REMOVED***;
  ***REMOVED***
}

drop_if_break_1: {
    options = { loops: true };
    input: {
        for (;;***REMOVED***
            if (foo(***REMOVED******REMOVED*** break;
  ***REMOVED***
    expect: {
        for (; !foo(***REMOVED***;***REMOVED***;
  ***REMOVED***
}

drop_if_break_2: {
    options = { loops: true };
    input: {
        for (;bar(***REMOVED***;***REMOVED***
            if (foo(***REMOVED******REMOVED*** break;
  ***REMOVED***
    expect: {
        for (; bar(***REMOVED*** && !foo(***REMOVED***;***REMOVED***;
  ***REMOVED***
}

drop_if_break_3: {
    options = { loops: true };
    input: {
        for (;bar(***REMOVED***;***REMOVED*** {
            if (foo(***REMOVED******REMOVED*** break;
            stuff1(***REMOVED***;
            stuff2(***REMOVED***;
      ***REMOVED***
  ***REMOVED***
    expect: {
        for (; bar(***REMOVED*** && !foo(***REMOVED***;***REMOVED*** {
            stuff1(***REMOVED***;
            stuff2(***REMOVED***;
      ***REMOVED***
  ***REMOVED***
}

drop_if_break_4: {
    options = { loops: true, sequences: true };
    input: {
        for (;bar(***REMOVED***;***REMOVED*** {
            x(***REMOVED***;
            y(***REMOVED***;
            if (foo(***REMOVED******REMOVED*** break;
            z(***REMOVED***;
            k(***REMOVED***;
      ***REMOVED***
  ***REMOVED***
    expect: {
        for (; bar(***REMOVED*** && (x(***REMOVED***, y(***REMOVED***, !foo(***REMOVED******REMOVED***;***REMOVED*** z(***REMOVED***, k(***REMOVED***;
  ***REMOVED***
}

drop_if_else_break_1: {
    options = { loops: true };
    input: {
        for (;;***REMOVED*** if (foo(***REMOVED******REMOVED*** bar(***REMOVED***; else break;
  ***REMOVED***
    expect: {
        for (; foo(***REMOVED***; ***REMOVED*** bar(***REMOVED***;
  ***REMOVED***
}

drop_if_else_break_2: {
    options = { loops: true };
    input: {
        for (;bar(***REMOVED***;***REMOVED*** {
            if (foo(***REMOVED******REMOVED*** baz(***REMOVED***;
            else break;
      ***REMOVED***
  ***REMOVED***
    expect: {
        for (; bar(***REMOVED*** && foo(***REMOVED***;***REMOVED*** baz(***REMOVED***;
  ***REMOVED***
}

drop_if_else_break_3: {
    options = { loops: true };
    input: {
        for (;bar(***REMOVED***;***REMOVED*** {
            if (foo(***REMOVED******REMOVED*** baz(***REMOVED***;
            else break;
            stuff1(***REMOVED***;
            stuff2(***REMOVED***;
      ***REMOVED***
  ***REMOVED***
    expect: {
        for (; bar(***REMOVED*** && foo(***REMOVED***;***REMOVED*** {
            baz(***REMOVED***;
            stuff1(***REMOVED***;
            stuff2(***REMOVED***;
      ***REMOVED***
  ***REMOVED***
}

drop_if_else_break_4: {
    options = { loops: true, sequences: true };
    input: {
        for (;bar(***REMOVED***;***REMOVED*** {
            x(***REMOVED***;
            y(***REMOVED***;
            if (foo(***REMOVED******REMOVED*** baz(***REMOVED***;
            else break;
            z(***REMOVED***;
            k(***REMOVED***;
      ***REMOVED***
  ***REMOVED***
    expect: {
        for (; bar(***REMOVED*** && (x(***REMOVED***, y(***REMOVED***, foo(***REMOVED******REMOVED***;***REMOVED*** baz(***REMOVED***, z(***REMOVED***, k(***REMOVED***;
  ***REMOVED***
}
