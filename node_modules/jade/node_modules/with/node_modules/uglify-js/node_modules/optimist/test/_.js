var spawn = require('child_process'***REMOVED***.spawn;
var test = require('tap'***REMOVED***.test;

test('dotSlashEmpty', testCmd('./bin.js', []***REMOVED******REMOVED***;

test('dotSlashArgs', testCmd('./bin.js', [ 'a', 'b', 'c' ]***REMOVED******REMOVED***;

test('nodeEmpty', testCmd('node bin.js', []***REMOVED******REMOVED***;

test('nodeArgs', testCmd('node bin.js', [ 'x', 'y', 'z' ]***REMOVED******REMOVED***;

test('whichNodeEmpty', function (t***REMOVED*** {
    var which = spawn('which', ['node']***REMOVED***;
    
    which.stdout.on('data', function (buf***REMOVED*** {
        t.test(
            testCmd(buf.toString(***REMOVED***.trim(***REMOVED*** + ' bin.js', []***REMOVED***
        ***REMOVED***;
        t.end(***REMOVED***;
  ***REMOVED******REMOVED***;
    
    which.stderr.on('data', function (err***REMOVED*** {
        assert.error(err***REMOVED***;
        t.end(***REMOVED***;
  ***REMOVED******REMOVED***;
}***REMOVED***;

test('whichNodeArgs', function (t***REMOVED*** {
    var which = spawn('which', ['node']***REMOVED***;

    which.stdout.on('data', function (buf***REMOVED*** {
        t.test(
            testCmd(buf.toString(***REMOVED***.trim(***REMOVED*** + ' bin.js', [ 'q', 'r' ]***REMOVED***
        ***REMOVED***;
        t.end(***REMOVED***;
  ***REMOVED******REMOVED***;
    
    which.stderr.on('data', function (err***REMOVED*** {
        t.error(err***REMOVED***;
        t.end(***REMOVED***;
  ***REMOVED******REMOVED***;
}***REMOVED***;

function testCmd (cmd, args***REMOVED*** {

    return function (t***REMOVED*** {
        var to = setTimeout(function (***REMOVED*** {
            assert.fail('Never got stdout data.'***REMOVED***
      ***REMOVED***, 5000***REMOVED***;
        
        var oldDir = process.cwd(***REMOVED***;
        process.chdir(__dirname + '/_'***REMOVED***;
        
        var cmds = cmd.split(' '***REMOVED***;
        
        var bin = spawn(cmds[0], cmds.slice(1***REMOVED***.concat(args.map(String***REMOVED******REMOVED******REMOVED***;
        process.chdir(oldDir***REMOVED***;
        
        bin.stderr.on('data', function (err***REMOVED*** {
            t.error(err***REMOVED***;
            t.end(***REMOVED***;
      ***REMOVED******REMOVED***;
        
        bin.stdout.on('data', function (buf***REMOVED*** {
            clearTimeout(to***REMOVED***;
            var _ = JSON.parse(buf.toString(***REMOVED******REMOVED***;
            t.same(_.map(String***REMOVED***, args.map(String***REMOVED******REMOVED***;
            t.end(***REMOVED***;
      ***REMOVED******REMOVED***;
  ***REMOVED***;
}
