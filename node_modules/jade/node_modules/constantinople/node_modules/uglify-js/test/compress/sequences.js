make_sequences_1: {
    options = {
        sequences: true
  ***REMOVED***;
    input: {
        foo(***REMOVED***;
        bar(***REMOVED***;
        baz(***REMOVED***;
  ***REMOVED***
    expect: {
        foo(***REMOVED***,bar(***REMOVED***,baz(***REMOVED***;
  ***REMOVED***
}

make_sequences_2: {
    options = {
        sequences: true
  ***REMOVED***;
    input: {
        if (boo***REMOVED*** {
            foo(***REMOVED***;
            bar(***REMOVED***;
            baz(***REMOVED***;
      ***REMOVED*** else {
            x(***REMOVED***;
            y(***REMOVED***;
            z(***REMOVED***;
      ***REMOVED***
  ***REMOVED***
    expect: {
        if (boo***REMOVED*** foo(***REMOVED***,bar(***REMOVED***,baz(***REMOVED***;
        else x(***REMOVED***,y(***REMOVED***,z(***REMOVED***;
  ***REMOVED***
}

make_sequences_3: {
    options = {
        sequences: true
  ***REMOVED***;
    input: {
        function f(***REMOVED*** {
            foo(***REMOVED***;
            bar(***REMOVED***;
            return baz(***REMOVED***;
      ***REMOVED***
        function g(***REMOVED*** {
            foo(***REMOVED***;
            bar(***REMOVED***;
            throw new Error(***REMOVED***;
      ***REMOVED***
  ***REMOVED***
    expect: {
        function f(***REMOVED*** {
            return foo(***REMOVED***, bar(***REMOVED***, baz(***REMOVED***;
      ***REMOVED***
        function g(***REMOVED*** {
            throw foo(***REMOVED***, bar(***REMOVED***, new Error(***REMOVED***;
      ***REMOVED***
  ***REMOVED***
}

make_sequences_4: {
    options = {
        sequences: true
  ***REMOVED***;
    input: {
        x = 5;
        if (y***REMOVED*** z(***REMOVED***;

        x = 5;
        for (i = 0; i < 5; i++***REMOVED*** console.log(i***REMOVED***;

        x = 5;
        for (; i < 5; i++***REMOVED*** console.log(i***REMOVED***;

        x = 5;
        switch (y***REMOVED*** {}

        x = 5;
        with (obj***REMOVED*** {}
  ***REMOVED***
    expect: {
        if (x = 5, y***REMOVED*** z(***REMOVED***;
        for (x = 5, i = 0; i < 5; i++***REMOVED*** console.log(i***REMOVED***;
        for (x = 5; i < 5; i++***REMOVED*** console.log(i***REMOVED***;
        switch (x = 5, y***REMOVED*** {}
        with (x = 5, obj***REMOVED***;
  ***REMOVED***
}

lift_sequences_1: {
    options = { sequences: true };
    input: {
        foo = !(x(***REMOVED***, y(***REMOVED***, bar(***REMOVED******REMOVED***;
  ***REMOVED***
    expect: {
        x(***REMOVED***, y(***REMOVED***, foo = !bar(***REMOVED***;
  ***REMOVED***
}

lift_sequences_2: {
    options = { sequences: true, evaluate: true };
    input: {
        foo.x = (foo = {}, 10***REMOVED***;
        bar = (bar = {}, 10***REMOVED***;
  ***REMOVED***
    expect: {
        foo.x = (foo = {}, 10***REMOVED***,
        bar = {}, bar = 10;
  ***REMOVED***
}

lift_sequences_3: {
    options = { sequences: true, conditionals: true };
    input: {
        x = (foo(***REMOVED***, bar(***REMOVED***, baz(***REMOVED******REMOVED*** ? 10 : 20;
  ***REMOVED***
    expect: {
        foo(***REMOVED***, bar(***REMOVED***, x = baz(***REMOVED*** ? 10 : 20;
  ***REMOVED***
}

lift_sequences_4: {
    options = { side_effects: true };
    input: {
        x = (foo, bar, baz***REMOVED***;
  ***REMOVED***
    expect: {
        x = baz;
  ***REMOVED***
}

for_sequences: {
    options = { sequences: true };
    input: {
        // 1
        foo(***REMOVED***;
        bar(***REMOVED***;
        for (; false;***REMOVED***;
        // 2
        foo(***REMOVED***;
        bar(***REMOVED***;
        for (x = 5; false;***REMOVED***;
        // 3
        x = (foo in bar***REMOVED***;
        for (; false;***REMOVED***;
        // 4
        x = (foo in bar***REMOVED***;
        for (y = 5; false;***REMOVED***;
  ***REMOVED***
    expect: {
        // 1
        for (foo(***REMOVED***, bar(***REMOVED***; false;***REMOVED***;
        // 2
        for (foo(***REMOVED***, bar(***REMOVED***, x = 5; false;***REMOVED***;
        // 3
        x = (foo in bar***REMOVED***;
        for (; false;***REMOVED***;
        // 4
        x = (foo in bar***REMOVED***;
        for (y = 5; false;***REMOVED***;
  ***REMOVED***
}
