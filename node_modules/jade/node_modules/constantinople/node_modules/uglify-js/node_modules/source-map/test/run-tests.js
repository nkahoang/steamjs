#!/usr/bin/env node
/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */
var assert = require('assert'***REMOVED***;
var fs = require('fs'***REMOVED***;
var ***REMOVED***;
var util = require('./source-map/util'***REMOVED***;

function run(tests***REMOVED*** {
  var total = 0;
  var passed = 0;

  for (var i = 0; i < tests.length; i++***REMOVED*** {
    for (var k in tests[i].testCase***REMOVED*** {
      if (/^test/.test(k***REMOVED******REMOVED*** {
        total++;
        try {
          tests[i].testCase[k](assert, util***REMOVED***;
          passed++;
      ***REMOVED***
        catch (e***REMOVED*** {
          console.log('FAILED ' + tests[i].name + ': ' + k + '!'***REMOVED***;
          console.log(e.stack***REMOVED***;
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***
***REMOVED***

  console.log(''***REMOVED***;
  console.log(passed + ' / ' + total + ' tests passed.'***REMOVED***;
  console.log(''***REMOVED***;

  return total - passed;
}

function isTestFile(f***REMOVED*** {
  var testToRun = process.argv[2];
  return testToRun
    ? path.basename(testToRun***REMOVED*** === f
    : /^test\-.*?\.js/.test(f***REMOVED***;
}

function toModule(f***REMOVED*** {
  return './source-map/' + f.replace(/\.js$/, ''***REMOVED***;
}

var requires = fs.readdirSync(path.join(__dirname, 'source-map'***REMOVED******REMOVED***
  .filter(isTestFile***REMOVED***
  .map(toModule***REMOVED***;

var code = run(requires.map(require***REMOVED***.map(function (mod, i***REMOVED*** {
  return {
    name: requires[i],
    testCase: mod
***REMOVED***;
}***REMOVED******REMOVED***;

process.exit(code***REMOVED***;
