'use strict'

var fs = require('fs'***REMOVED***
var PassThrough = require('stream'***REMOVED***.PassThrough
var Transform = require('stream'***REMOVED***.Transform

if (typeof Transform === 'undefined'***REMOVED*** {
  throw new Error('UglifyJS only supports browserify when using node >= 0.10.x'***REMOVED***
}

var cache = {}
module.exports = transform
function transform(file***REMOVED*** {
  if (!/tools\/node\.js$/.test(file.replace(/\\/g,'/'***REMOVED******REMOVED******REMOVED*** return new PassThrough(***REMOVED***;
  if (cache[file]***REMOVED*** return makeStream(cache[file]***REMOVED***
  var uglify = require(file***REMOVED***
  var src = 'var sys = require("util"***REMOVED***;\nvar MOZ_SourceMap = require("source-map"***REMOVED***;\nvar UglifyJS = exports;\n' + uglify.FILES.map(function (path***REMOVED*** { return fs.readFileSync(path, 'utf8'***REMOVED*** }***REMOVED***.join('\n'***REMOVED***

  var ast = uglify.parse(src***REMOVED***
  ast.figure_out_scope(***REMOVED***

  var variables = ast.variables
    .map(function (node, name***REMOVED*** {
      return name
  ***REMOVED******REMOVED***

  src += '\n\n' + variables.map(function (v***REMOVED*** { return 'exports.' + v + ' = ' + v + ';' }***REMOVED***.join('\n'***REMOVED*** + '\n\n'

  src += 'exports.AST_Node.warn_function = function (txt***REMOVED*** { if (typeof console != "undefined" && typeof console.warn === "function"***REMOVED*** console.warn(txt***REMOVED*** }\n\n'

  src += 'exports.minify = ' + uglify.minify.toString(***REMOVED*** + ';\n\n'
  src += 'exports.describe_ast = ' + uglify.describe_ast.toString(***REMOVED*** + ';'

  // TODO: remove once https://github.com/substack/node-browserify/issues/631 is resolved
  src = src.replace(/"for"/g, '"fo" + "r"'***REMOVED***

  cache[file] = src
  return makeStream(src***REMOVED***;
}

function makeStream(src***REMOVED*** {
  var res = new Transform(***REMOVED***;
  res._transform = function (chunk, encoding, callback***REMOVED*** { callback(***REMOVED*** }
  res._flush = function (callback***REMOVED*** {
    res.push(src***REMOVED***
    callback(***REMOVED***
***REMOVED***
  return res;
}
