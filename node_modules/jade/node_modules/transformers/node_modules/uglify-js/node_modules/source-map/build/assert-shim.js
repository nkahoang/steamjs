/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */
define('test/source-map/assert', ['exports'], function (exports***REMOVED*** {

  let do_throw = function (msg***REMOVED*** {
    throw new Error(msg***REMOVED***;
***REMOVED***;

  exports.init = function (throw_fn***REMOVED*** {
    do_throw = throw_fn;
***REMOVED***;

  exports.doesNotThrow = function (fn***REMOVED*** {
    try {
      fn(***REMOVED***;
  ***REMOVED***
    catch (e***REMOVED*** {
      do_throw(e.message***REMOVED***;
  ***REMOVED***
***REMOVED***;

  exports.equal = function (actual, expected, msg***REMOVED*** {
    msg = msg || String(actual***REMOVED*** + ' != ' + String(expected***REMOVED***;
    if (actual != expected***REMOVED*** {
      do_throw(msg***REMOVED***;
  ***REMOVED***
***REMOVED***;

  exports.ok = function (val, msg***REMOVED*** {
    msg = msg || String(val***REMOVED*** + ' is falsey';
    if (!Boolean(val***REMOVED******REMOVED*** {
      do_throw(msg***REMOVED***;
  ***REMOVED***
***REMOVED***;

  exports.strictEqual = function (actual, expected, msg***REMOVED*** {
    msg = msg || String(actual***REMOVED*** + ' !== ' + String(expected***REMOVED***;
    if (actual !== expected***REMOVED*** {
      do_throw(msg***REMOVED***;
  ***REMOVED***
***REMOVED***;

  exports.throws = function (fn***REMOVED*** {
    try {
      fn(***REMOVED***;
      do_throw('Expected an error to be thrown, but it wasn\'t.'***REMOVED***;
  ***REMOVED***
    catch (e***REMOVED*** {
  ***REMOVED***
***REMOVED***;

}***REMOVED***;
