ifs_1: {
    options = {
        conditionals: true
  ***REMOVED***;
    input: {
        if (foo***REMOVED*** bar(***REMOVED***;
        if (!foo***REMOVED***; else bar(***REMOVED***;
        if (foo***REMOVED***; else bar(***REMOVED***;
        if (foo***REMOVED***; else;
  ***REMOVED***
    expect: {
        foo&&bar(***REMOVED***;
        foo&&bar(***REMOVED***;
        foo||bar(***REMOVED***;
        foo;
  ***REMOVED***
}

ifs_2: {
    options = {
        conditionals: true
  ***REMOVED***;
    input: {
        if (foo***REMOVED*** {
            x(***REMOVED***;
      ***REMOVED*** else if (bar***REMOVED*** {
            y(***REMOVED***;
      ***REMOVED*** else if (baz***REMOVED*** {
            z(***REMOVED***;
      ***REMOVED***

        if (foo***REMOVED*** {
            x(***REMOVED***;
      ***REMOVED*** else if (bar***REMOVED*** {
            y(***REMOVED***;
      ***REMOVED*** else if (baz***REMOVED*** {
            z(***REMOVED***;
      ***REMOVED*** else {
            t(***REMOVED***;
      ***REMOVED***
  ***REMOVED***
    expect: {
        foo ? x(***REMOVED*** : bar ? y(***REMOVED*** : baz && z(***REMOVED***;
        foo ? x(***REMOVED*** : bar ? y(***REMOVED*** : baz ? z(***REMOVED*** : t(***REMOVED***;
  ***REMOVED***
}

ifs_3_should_warn: {
    options = {
        conditionals : true,
        dead_code    : true,
        evaluate     : true,
        booleans     : true
  ***REMOVED***;
    input: {
        if (x && !(x + "1"***REMOVED*** && y***REMOVED*** { // 1
            var qq;
            foo(***REMOVED***;
      ***REMOVED*** else {
            bar(***REMOVED***;
      ***REMOVED***

        if (x || !!(x + "1"***REMOVED*** || y***REMOVED*** { // 2
            foo(***REMOVED***;
      ***REMOVED*** else {
            var jj;
            bar(***REMOVED***;
      ***REMOVED***
  ***REMOVED***
    expect: {
        var qq; bar(***REMOVED***;          // 1
        var jj; foo(***REMOVED***;          // 2
  ***REMOVED***
}

ifs_4: {
    options = {
        conditionals: true
  ***REMOVED***;
    input: {
        if (foo && bar***REMOVED*** {
            x(foo***REMOVED***[10].bar.baz = something(***REMOVED***;
      ***REMOVED*** else
            x(foo***REMOVED***[10].bar.baz = something_else(***REMOVED***;
  ***REMOVED***
    expect: {
        x(foo***REMOVED***[10].bar.baz = (foo && bar***REMOVED*** ? something(***REMOVED*** : something_else(***REMOVED***;
  ***REMOVED***
}

ifs_5: {
    options = {
        if_return: true,
        conditionals: true,
        comparisons: true,
  ***REMOVED***;
    input: {
        function f(***REMOVED*** {
            if (foo***REMOVED*** return;
            bar(***REMOVED***;
            baz(***REMOVED***;
      ***REMOVED***
        function g(***REMOVED*** {
            if (foo***REMOVED*** return;
            if (bar***REMOVED*** return;
            if (baz***REMOVED*** return;
            if (baa***REMOVED*** return;
            a(***REMOVED***;
            b(***REMOVED***;
      ***REMOVED***
  ***REMOVED***
    expect: {
        function f(***REMOVED*** {
            if (!foo***REMOVED*** {
                bar(***REMOVED***;
                baz(***REMOVED***;
          ***REMOVED***
      ***REMOVED***
        function g(***REMOVED*** {
            if (!(foo || bar || baz || baa***REMOVED******REMOVED*** {
                a(***REMOVED***;
                b(***REMOVED***;
          ***REMOVED***
      ***REMOVED***
  ***REMOVED***
}

ifs_6: {
    options = {
        conditionals: true,
        comparisons: true
  ***REMOVED***;
    input: {
        if (!foo && !bar && !baz && !boo***REMOVED*** {
            x = 10;
      ***REMOVED*** else {
            x = 20;
      ***REMOVED***
  ***REMOVED***
    expect: {
        x = foo || bar || baz || boo ? 20 : 10;
  ***REMOVED***
}
