import Options
from os import unlink, symlink, popen
from os.path import exists 

srcdir = "."
blddir = "build"
VERSION = "0.1.0"

def set_options(opt***REMOVED***:
  opt.tool_options("compiler_cxx"***REMOVED***
  opt.add_option( '--debug'
                , action='store_true'
                , default=False
                , help='Build debug variant [Default: False]'
                , dest='debug'
                ***REMOVED***  

def configure(conf***REMOVED***:
  conf.check_tool("compiler_cxx"***REMOVED***
  conf.check_tool("node_addon"***REMOVED***
  conf.env.append_value('CXXFLAGS', ['-O3', '-funroll-loops']***REMOVED***

  # conf.env.append_value('CXXFLAGS', ['-DDEBUG', '-g', '-O0', '-Wall', '-Wextra']***REMOVED***
  # conf.check(lib='node', libpath=['/usr/lib', '/usr/local/lib'], uselib_store='NODE'***REMOVED***

def build(bld***REMOVED***:
  obj = bld.new_task_gen("cxx", "shlib", "node_addon"***REMOVED***
  obj.target = "bson"
  obj.source = ["bson.cc"]
  # obj.uselib = "NODE"

def shutdown(***REMOVED***:
  # HACK to get compress.node out of build directory.
  # better way to do this?
  if Options.commands['clean']:
    if exists('bson.node'***REMOVED***: unlink('bson.node'***REMOVED***
  else:
    if exists('build/default/bson.node'***REMOVED*** and not exists('bson.node'***REMOVED***:
      symlink('build/default/bson.node', 'bson.node'***REMOVED***
