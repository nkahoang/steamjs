var _getWriteConcern = require('./shared'***REMOVED***._getWriteConcern;

var createIndex = function createIndex (fieldOrSpec, options, callback***REMOVED*** {
  // Clean up call
  var args = Array.prototype.slice.call(arguments, 1***REMOVED***;
  callback = args.pop(***REMOVED***;
  options = args.length ? args.shift(***REMOVED*** || {} : {};
  options = typeof callback === 'function' ? options : callback;
  options = options == null ? {} : options;

  // Collect errorOptions
  var errorOptions = _getWriteConcern(this, options***REMOVED***;
  // Execute create index
  this.db.createIndex(this.collectionName, fieldOrSpec, options, callback***REMOVED***;
};

var indexExists = function indexExists(indexes, callback***REMOVED*** {
 this.indexInformation(function(err, indexInformation***REMOVED*** {
   // If we have an error return
   if(err != null***REMOVED*** return callback(err, null***REMOVED***;
   // Let's check for the index names
   if(Array.isArray(indexes***REMOVED******REMOVED*** {
     for(var i = 0; i < indexes.length; i++***REMOVED*** {
       if(indexInformation[indexes[i]] == null***REMOVED*** {
         return callback(null, false***REMOVED***;
     ***REMOVED***
   ***REMOVED***

     // All keys found return true
     return callback(null, true***REMOVED***;
 ***REMOVED*** else {
     return callback(null, indexInformation[indexes] != null***REMOVED***;
 ***REMOVED***
 }***REMOVED***;
}

var dropAllIndexes = function dropIndexes (callback***REMOVED*** {
  this.db.dropIndex(this.collectionName, '*', function (err, result***REMOVED*** {
    if(err***REMOVED*** return callback(err, false***REMOVED***;
    callback(null, true***REMOVED***;
***REMOVED******REMOVED***;
};

var indexInformation = function indexInformation (options, callback***REMOVED*** {
  // Unpack calls
  var args = Array.prototype.slice.call(arguments, 0***REMOVED***;
  callback = args.pop(***REMOVED***;
  options = args.length ? args.shift(***REMOVED*** || {} : {};
  // Call the index information
  this.db.indexInformation(this.collectionName, options, callback***REMOVED***;
};

var ensureIndex = function ensureIndex (fieldOrSpec, options, callback***REMOVED*** {
  // Clean up call
  if (typeof callback === 'undefined' && typeof options === 'function'***REMOVED*** {
    callback = options;
    options = {};
***REMOVED***

  if (options == null***REMOVED*** {
    options = {};
***REMOVED***

  // Execute create index
  this.db.ensureIndex(this.collectionName, fieldOrSpec, options, callback***REMOVED***;
};

exports.createIndex = createIndex;
exports.indexExists = indexExists;
exports.dropAllIndexes = dropAllIndexes;
exports.indexInformation = indexInformation;
exports.ensureIndex = ensureIndex;
