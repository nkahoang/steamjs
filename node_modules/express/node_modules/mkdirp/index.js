var ***REMOVED***;
var fs = require('fs'***REMOVED***;

module.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;

function mkdirP (p, mode, f, made***REMOVED*** {
    if (typeof mode === 'function' || mode === undefined***REMOVED*** {
        f = mode;
        mode = 0777 & (~process.umask(***REMOVED******REMOVED***;
  ***REMOVED***
    if (!made***REMOVED*** made = null;

    var cb = f || function (***REMOVED*** {};
    if (typeof mode === 'string'***REMOVED*** mode = parseInt(mode, 8***REMOVED***;
    p = path.resolve(p***REMOVED***;

    fs.mkdir(p, mode, function (er***REMOVED*** {
        if (!er***REMOVED*** {
            made = made || p;
            return cb(null, made***REMOVED***;
      ***REMOVED***
        switch (er.code***REMOVED*** {
            case 'ENOENT':
                mkdirP(path.dirname(p***REMOVED***, mode, function (er, made***REMOVED*** {
                    if (er***REMOVED*** cb(er, made***REMOVED***;
                    else mkdirP(p, mode, cb, made***REMOVED***;
              ***REMOVED******REMOVED***;
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                fs.stat(p, function (er2, stat***REMOVED*** {
                    // if the stat fails, then that's super weird.
                    // let the original error be the failure reason.
                    if (er2 || !stat.isDirectory(***REMOVED******REMOVED*** cb(er, made***REMOVED***
                    else cb(null, made***REMOVED***;
              ***REMOVED******REMOVED***;
                break;
      ***REMOVED***
  ***REMOVED******REMOVED***;
}

mkdirP.sync = function sync (p, mode, made***REMOVED*** {
    if (mode === undefined***REMOVED*** {
        mode = 0777 & (~process.umask(***REMOVED******REMOVED***;
  ***REMOVED***
    if (!made***REMOVED*** made = null;

    if (typeof mode === 'string'***REMOVED*** mode = parseInt(mode, 8***REMOVED***;
    p = path.resolve(p***REMOVED***;

    try {
        fs.mkdirSync(p, mode***REMOVED***;
        made = made || p;
  ***REMOVED***
    catch (err0***REMOVED*** {
        switch (err0.code***REMOVED*** {
            case 'ENOENT' :
                made = sync(path.dirname(p***REMOVED***, mode, made***REMOVED***;
                sync(p, mode, made***REMOVED***;
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                var stat;
                try {
                    stat = fs.statSync(p***REMOVED***;
              ***REMOVED***
                catch (err1***REMOVED*** {
                    throw err0;
              ***REMOVED***
                if (!stat.isDirectory(***REMOVED******REMOVED*** throw err0;
                break;
      ***REMOVED***
  ***REMOVED***

    return made;
};
