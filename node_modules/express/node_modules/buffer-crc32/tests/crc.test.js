var crc32 = require('..'***REMOVED***;
var test = require('tap'***REMOVED***.test;

test('simple crc32 is no problem', function (t***REMOVED*** {
  var input = Buffer('hey sup bros'***REMOVED***;
  var expected = Buffer([0x47, 0xfa, 0x55, 0x70]***REMOVED***;
  t.same(crc32(input***REMOVED***, expected***REMOVED***;
  t.end(***REMOVED***;
}***REMOVED***;

test('another simple one', function (t***REMOVED*** {
  var input = Buffer('IEND'***REMOVED***;
  var expected = Buffer([0xae, 0x42, 0x60, 0x82]***REMOVED***;
  t.same(crc32(input***REMOVED***, expected***REMOVED***;
  t.end(***REMOVED***;
}***REMOVED***;

test('slightly more complex', function (t***REMOVED*** {
  var input = Buffer([0x00, 0x00, 0x00]***REMOVED***;
  var expected = Buffer([0xff, 0x41, 0xd9, 0x12]***REMOVED***;
  t.same(crc32(input***REMOVED***, expected***REMOVED***;
  t.end(***REMOVED***;
}***REMOVED***;

test('complex crc32 gets calculated like a champ', function (t***REMOVED*** {
  var input = Buffer('शीर्षक'***REMOVED***;
  var expected = Buffer([0x17, 0xb8, 0xaf, 0xf1]***REMOVED***;
  t.same(crc32(input***REMOVED***, expected***REMOVED***;
  t.end(***REMOVED***;
}***REMOVED***;

test('casts to buffer if necessary', function (t***REMOVED*** {
  var input = 'शीर्षक';
  var expected = Buffer([0x17, 0xb8, 0xaf, 0xf1]***REMOVED***;
  t.same(crc32(input***REMOVED***, expected***REMOVED***;
  t.end(***REMOVED***;
}***REMOVED***;

test('can do signed', function (t***REMOVED*** {
  var input = 'ham sandwich';
  var expected = -1891873021;
  t.same(crc32.signed(input***REMOVED***, expected***REMOVED***;
  t.end(***REMOVED***;
}***REMOVED***;

test('can do unsigned', function (t***REMOVED*** {
  var input = 'bear sandwich';
  var expected = 3711466352;
  t.same(crc32.unsigned(input***REMOVED***, expected***REMOVED***;
  t.end(***REMOVED***;
}***REMOVED***;


test('simple crc32 in append mode', function (t***REMOVED*** {
  var input = [Buffer('hey'***REMOVED***, Buffer(' '***REMOVED***, Buffer('sup'***REMOVED***, Buffer(' '***REMOVED***, Buffer('bros'***REMOVED***];
  var expected = Buffer([0x47, 0xfa, 0x55, 0x70]***REMOVED***;
  for (var crc = 0, i = 0; i < input.length; i++***REMOVED*** {
    crc = crc32(input[i], crc***REMOVED***;
***REMOVED***
  t.same(crc, expected***REMOVED***;
  t.end(***REMOVED***;
}***REMOVED***;


test('can do signed in append mode', function (t***REMOVED*** {
  var input1 = 'ham';
  var input2 = ' ';
  var input3 = 'sandwich';
  var expected = -1891873021;

  var crc = crc32.signed(input1***REMOVED***;
  crc = crc32.signed(input2, crc***REMOVED***;
  crc = crc32.signed(input3, crc***REMOVED***;

  t.same(crc, expected***REMOVED***;
  t.end(***REMOVED***;
}***REMOVED***;

test('can do unsigned in append mode', function (t***REMOVED*** {
  var input1 = 'bear san';
  var input2 = 'dwich';
  var expected = 3711466352;

  var crc = crc32.unsigned(input1***REMOVED***;
  crc = crc32.unsigned(input2, crc***REMOVED***;
  t.same(crc, expected***REMOVED***;
  t.end(***REMOVED***;
}***REMOVED***;

