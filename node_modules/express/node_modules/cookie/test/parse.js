
var assert = require('assert'***REMOVED***;

var cookie = require('..'***REMOVED***;

suite('parse'***REMOVED***;

test('basic', function(***REMOVED*** {
    assert.deepEqual({ foo: 'bar' }, cookie.parse('foo=bar'***REMOVED******REMOVED***;
    assert.deepEqual({ foo: '123' }, cookie.parse('foo=123'***REMOVED******REMOVED***;
}***REMOVED***;

test('ignore spaces', function(***REMOVED*** {
    assert.deepEqual({ FOO: 'bar', baz: 'raz' },
            cookie.parse('FOO    = bar;   baz  =   raz'***REMOVED******REMOVED***;
}***REMOVED***;

test('escaping', function(***REMOVED*** {
    assert.deepEqual({ foo: 'bar=123456789&name=Magic+Mouse' },
            cookie.parse('foo="bar=123456789&name=Magic+Mouse"'***REMOVED******REMOVED***;

    assert.deepEqual({ email: ' ",;/' },
            cookie.parse('email=%20%22%2c%3b%2f'***REMOVED******REMOVED***;
}***REMOVED***;

test('ignore escaping error and return original value', function(***REMOVED*** {
    assert.deepEqual({ foo: '%1', bar: 'bar' }, cookie.parse('foo=%1;bar=bar'***REMOVED******REMOVED***;
}***REMOVED***;

test('ignore non values', function(***REMOVED*** {
    assert.deepEqual({ foo: '%1', bar: 'bar' }, cookie.parse('foo=%1;bar=bar;HttpOnly;Secure'***REMOVED******REMOVED***;
}***REMOVED***;

test('unencoded', function(***REMOVED*** {
    assert.deepEqual({ foo: 'bar=123456789&name=Magic+Mouse' },
            cookie.parse('foo="bar=123456789&name=Magic+Mouse"',{
                decode: function(value***REMOVED*** { return value; }
          ***REMOVED******REMOVED******REMOVED***;

    assert.deepEqual({ email: '%20%22%2c%3b%2f' },
            cookie.parse('email=%20%22%2c%3b%2f',{
                decode: function(value***REMOVED*** { return value; }
          ***REMOVED******REMOVED******REMOVED***;
}***REMOVED***;

test('dates', function(***REMOVED*** {
    assert.deepEqual({ priority: 'true', Path: '/', expires: 'Wed, 29 Jan 2014 17:43:25 GMT' },
            cookie.parse('priority=true; expires=Wed, 29 Jan 2014 17:43:25 GMT; Path=/',{
                decode: function(value***REMOVED*** { return value; }
          ***REMOVED******REMOVED******REMOVED***;
}***REMOVED***
