(function(***REMOVED*** {
  var Buffer, Iconv, Negotiator, availableCharsets, http, iconv, key, message, messages, server, val;

  Negotiator = require('../lib/negotiator'***REMOVED***.Negotiator;

  ***REMOVED***;

  Buffer = require('buffer'***REMOVED***.Buffer;

  Iconv = require('iconv'***REMOVED***.Iconv;

  iconv = new Iconv('UTF-8', 'ISO-8859-1'***REMOVED***;

  message = "Ã«";

  messages = {
    'utf-8': message,
    'iso-8859-1': iconv.convert(new Buffer(message***REMOVED******REMOVED***
***REMOVED***;

  availableCharsets = (function(***REMOVED*** {
    var _results;
    _results = [];
    for (key in messages***REMOVED*** {
      val = messages[key];
      _results.push(key***REMOVED***;
  ***REMOVED***
    return _results;
***REMOVED******REMOVED***(***REMOVED***;

  server = http.createServer(function(req, res***REMOVED*** {
    var charset, negotiator;
    negotiator = new Negotiator(req***REMOVED***;
    console.log("Accept-Charset: " + req.headers['accept-charset']***REMOVED***;
    console.log("Preferred: " + (negotiator.preferredCharsets(***REMOVED******REMOVED******REMOVED***;
    console.log("Possible: " + (negotiator.preferredCharsets(availableCharsets***REMOVED******REMOVED******REMOVED***;
    charset = negotiator.preferredCharset(availableCharsets***REMOVED***;
    console.log("Selected: " + charset***REMOVED***;
    if (charset***REMOVED*** {
      res.writeHead(200, {
        'Content-Type': "text/html; charset=" + charset
    ***REMOVED******REMOVED***;
      return res.end(messages[charset]***REMOVED***;
  ***REMOVED*** else {
      res.writeHead(406***REMOVED***;
      return res.end(***REMOVED***;
  ***REMOVED***
***REMOVED******REMOVED***;

  server.listen(8080***REMOVED***;

}***REMOVED***.call(this***REMOVED***;
