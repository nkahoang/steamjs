(function(***REMOVED*** {
  var configuration, preferredLanguages, testConfigurations, testCorrectType, _i, _len,
    _this = this;

  preferredLanguages = require('../lib/language'***REMOVED***.preferredLanguages;

  this["Should not return a language when no is provided"] = function(test***REMOVED*** {
    test.deepEqual(preferredLanguages('*', []***REMOVED***, []***REMOVED***;
    return test.done(***REMOVED***;
***REMOVED***;

  this["Should not return a language when no language is acceptable"] = function(test***REMOVED*** {
    test.deepEqual(preferredLanguages('en', ['es']***REMOVED***, []***REMOVED***;
    return test.done(***REMOVED***;
***REMOVED***;

  this["Should not return a language with q = 0"] = function(test***REMOVED*** {
    test.deepEqual(preferredLanguages('en;q=0', ['en']***REMOVED***, []***REMOVED***;
    return test.done(***REMOVED***;
***REMOVED***;

  testCorrectType = function(c***REMOVED*** {
    return _this["Should return " + c.selected + " for accept-language header " + c.accept + " with provided language " + c.provided] = function(test***REMOVED*** {
      test.deepEqual(preferredLanguages(c.accept, c.provided***REMOVED***, c.selected***REMOVED***;
      return test.done(***REMOVED***;
  ***REMOVED***;
***REMOVED***;

  testConfigurations = [
    {
      accept: 'en',
      provided: ['en'],
      selected: ['en']
  ***REMOVED***, {
      accept: '*',
      provided: ['en'],
      selected: ['en']
  ***REMOVED***, {
      accept: 'en-US, en;q=0.8',
      provided: ['en-US', 'en-GB'],
      selected: ['en-US', 'en-GB']
  ***REMOVED***, {
      accept: 'en-US, en-GB',
      provided: ['en-US'],
      selected: ['en-US']
  ***REMOVED***, {
      accept: 'en',
      provided: ['en-US'],
      selected: ['en-US']
  ***REMOVED***, {
      accept: 'en;q=0.8, es',
      provided: ['en', 'es'],
      selected: ['es', 'en']
  ***REMOVED***, {
      accept: 'en-US;q=0.8, es',
      provided: ['en', 'es'],
      selected: ['es', 'en']
  ***REMOVED***, {
      accept: 'en-US;q=0.8, es',
      provided: null,
      selected: ['es', 'en-US']
  ***REMOVED***
  ];

  for (_i = 0, _len = testConfigurations.length; _i < _len; _i++***REMOVED*** {
    configuration = testConfigurations[_i];
    testCorrectType(configuration***REMOVED***;
***REMOVED***

}***REMOVED***.call(this***REMOVED***;
