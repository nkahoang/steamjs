module.exports = Negotiator;
Negotiator.Negotiator = Negotiator;

function Negotiator(request***REMOVED*** {
  if (!(this instanceof Negotiator***REMOVED******REMOVED*** return new Negotiator(request***REMOVED***;
  this.request = request;
}

var set = { charset: 'accept-charset',
            encoding: 'accept-encoding',
            language: 'accept-language',
            mediaType: 'accept' };


function capitalize(string***REMOVED***{
  return string.charAt(0***REMOVED***.toUpperCase(***REMOVED*** + string.slice(1***REMOVED***;
}

Object.keys(set***REMOVED***.forEach(function (k***REMOVED*** {
  var header = set[k],
      method = require('./'+k+'.js'***REMOVED***,
      singular = k,
      plural = k + 's';

  Negotiator.prototype[plural] = function (available***REMOVED*** {
    return method(this.request.headers[header], available***REMOVED***;
***REMOVED***;

  Negotiator.prototype[singular] = function(available***REMOVED*** {
    var set = this[plural](available***REMOVED***;
    if (set***REMOVED*** return set[0];
***REMOVED***;

  // Keep preferred* methods for legacy compatibility
  Negotiator.prototype['preferred'+capitalize(plural***REMOVED***] = Negotiator.prototype[plural];
  Negotiator.prototype['preferred'+capitalize(singular***REMOVED***] = Negotiator.prototype[singular];
}***REMOVED***
