
/**
 * Parse byte `size` string.
 *
 * @param {String} size
 * @return {Number}
 * @api public
 */

module.exports = function(size***REMOVED*** {
  if ('number' == typeof size***REMOVED*** return convert(size***REMOVED***;
  var parts = size.match(/^(\d+(?:\.\d+***REMOVED***?***REMOVED*** *(kb|mb|gb***REMOVED***$/***REMOVED***
    , n = parseFloat(parts[1]***REMOVED***
    , type = parts[2];

  var map = {
      kb: 1 << 10
    , mb: 1 << 20
    , gb: 1 << 30
***REMOVED***;

  return map[type] * n;
};

/**
 * convert bytes into string.
 *
 * @param {Number} b - bytes to convert
 * @return {String}
 * @api public
 */

function convert (b***REMOVED*** {
  var gb = 1 << 30, mb = 1 << 20, kb = 1 << 10;
  if (b >= gb***REMOVED*** return (Math.round(b / gb * 100***REMOVED*** / 100***REMOVED*** + 'gb';
  if (b >= mb***REMOVED*** return (Math.round(b / mb * 100***REMOVED*** / 100***REMOVED*** + 'mb';
  if (b >= kb***REMOVED*** return (Math.round(b / kb * 100***REMOVED*** / 100***REMOVED*** + 'kb';
  return b + 'b';
}
