diff --git a/lib/_stream_duplex.js b/lib/_stream_duplex.js
index c5a741c..a2e0d8e 100644
--- a/lib/_stream_duplex.js
+++ b/lib/_stream_duplex.js
@@ -26,8 +26,8 @@
 
 module.exports = Duplex;
 var util = require('util'***REMOVED***;
-var Readable = require('_stream_readable'***REMOVED***;
-var Writable = require('_stream_writable'***REMOVED***;
+var Readable = require('./_stream_readable'***REMOVED***;
+var Writable = require('./_stream_writable'***REMOVED***;
 
 util.inherits(Duplex, Readable***REMOVED***;
 
diff --git a/lib/_stream_passthrough.js b/lib/_stream_passthrough.js
index a5e9864..330c247 100644
--- a/lib/_stream_passthrough.js
+++ b/lib/_stream_passthrough.js
@@ -25,7 +25,7 @@
 
 module.exports = PassThrough;
 
-var Transform = require('_stream_transform'***REMOVED***;
+var Transform = require('./_stream_transform'***REMOVED***;
 var util = require('util'***REMOVED***;
 util.inherits(PassThrough, Transform***REMOVED***;
 
diff --git a/lib/_stream_readable.js b/lib/_stream_readable.js
index 0c3fe3e..90a8298 100644
--- a/lib/_stream_readable.js
+++ b/lib/_stream_readable.js
@@ -23,10 +23,34 @@ module.exports = Readable;
 Readable.ReadableState = ReadableState;
 
 var EE = require('events'***REMOVED***.EventEmitter;
+if (!EE.listenerCount***REMOVED*** EE.listenerCount = function(emitter, type***REMOVED*** {
+  return emitter.listeners(type***REMOVED***.length;
+};
+
+if (!global.setImmediate***REMOVED*** global.setImmediate = function setImmediate(fn***REMOVED*** {
+  return setTimeout(fn, 0***REMOVED***;
+};
+if (!global.clearImmediate***REMOVED*** global.clearImmediate = function clearImmediate(i***REMOVED*** {
+  return clearTimeout(i***REMOVED***;
+};
+
 var Stream = require('stream'***REMOVED***;
 var util = require('util'***REMOVED***;
+if (!util.isUndefined***REMOVED*** {
+  var utilIs = require('core-util-is'***REMOVED***;
+  for (var f in utilIs***REMOVED*** {
+    util[f] = utilIs[f];
+***REMOVED***
+}
 var StringDecoder;
-var debug = util.debuglog('stream'***REMOVED***;
+var debug;
+if (util.debuglog***REMOVED***
+  debug = util.debuglog('stream'***REMOVED***;
+else try {
+  debug = require('debuglog'***REMOVED***('stream'***REMOVED***;
+} catch (er***REMOVED*** {
+  debug = function(***REMOVED*** {};
+}
 
 util.inherits(Readable, Stream***REMOVED***;
 
@@ -380,7 +404,7 @@ function chunkInvalid(state, chunk***REMOVED*** {
 
 
 function onEofChunk(stream, state***REMOVED*** {
-  if (state.decoder && !state.ended***REMOVED*** {
+  if (state.decoder && !state.ended && state.decoder.end***REMOVED*** {
     var chunk = state.decoder.end(***REMOVED***;
     if (chunk && chunk.length***REMOVED*** {
       state.buffer.push(chunk***REMOVED***;
diff --git a/lib/_stream_transform.js b/lib/_stream_transform.js
index b1f9fcc..b0caf57 100644
--- a/lib/_stream_transform.js
+++ b/lib/_stream_transform.js
@@ -64,8 +64,14 @@
 
 module.exports = Transform;
 
-var Duplex = require('_stream_duplex'***REMOVED***;
+var Duplex = require('./_stream_duplex'***REMOVED***;
 var util = require('util'***REMOVED***;
+if (!util.isUndefined***REMOVED*** {
+  var utilIs = require('core-util-is'***REMOVED***;
+  for (var f in utilIs***REMOVED*** {
+    util[f] = utilIs[f];
+***REMOVED***
+}
 util.inherits(Transform, Duplex***REMOVED***;
 
 
diff --git a/lib/_stream_writable.js b/lib/_stream_writable.js
index ba2e920..f49288b 100644
--- a/lib/_stream_writable.js
+++ b/lib/_stream_writable.js
@@ -27,6 +27,12 @@ module.exports = Writable;
 Writable.WritableState = WritableState;
 
 var util = require('util'***REMOVED***;
+if (!util.isUndefined***REMOVED*** {
+  var utilIs = require('core-util-is'***REMOVED***;
+  for (var f in utilIs***REMOVED*** {
+    util[f] = utilIs[f];
+***REMOVED***
+}
 var Stream = require('stream'***REMOVED***;
 
 util.inherits(Writable, Stream***REMOVED***;
@@ -119,7 +125,7 @@ function WritableState(options, stream***REMOVED*** {
 function Writable(options***REMOVED*** {
   // Writable ctor is applied to Duplexes, though they're not
   // instanceof Writable, they're instanceof Readable.
-  if (!(this instanceof Writable***REMOVED*** && !(this instanceof Stream.Duplex***REMOVED******REMOVED***
+  if (!(this instanceof Writable***REMOVED*** && !(this instanceof require('./_stream_duplex'***REMOVED******REMOVED******REMOVED***
     return new Writable(options***REMOVED***;
 
   this._writableState = new WritableState(options, this***REMOVED***;
diff --git a/test/simple/test-stream-big-push.js b/test/simple/test-stream-big-push.js
index e3787e4..8cd2127 100644
--- a/test/simple/test-stream-big-push.js
+++ b/test/simple/test-stream-big-push.js
@@ -21,7 +21,7 @@
 
 var common = require('../common'***REMOVED***;
 var assert = require('assert'***REMOVED***;
-var stream = require('stream'***REMOVED***;
+var stream = require('../../'***REMOVED***;
 var str = 'asdfasdfasdfasdfasdf';
 
 var r = new stream.Readable({
diff --git a/test/simple/test-stream-end-paused.js b/test/simple/test-stream-end-paused.js
index bb73777..d40efc7 100644
--- a/test/simple/test-stream-end-paused.js
+++ b/test/simple/test-stream-end-paused.js
@@ -25,7 +25,7 @@ var gotEnd = false;
 
 // Make sure we don't miss the end event for paused 0-length streams
 
-var Readable = require('stream'***REMOVED***.Readable;
+var Readable = require('../../'***REMOVED***.Readable;
 var stream = new Readable(***REMOVED***;
 var calledRead = false;
 stream._read = function(***REMOVED*** {
diff --git a/test/simple/test-stream-pipe-after-end.js b/test/simple/test-stream-pipe-after-end.js
index b46ee90..0be8366 100644
--- a/test/simple/test-stream-pipe-after-end.js
+++ b/test/simple/test-stream-pipe-after-end.js
@@ -22,8 +22,8 @@
 var common = require('../common'***REMOVED***;
 var assert = require('assert'***REMOVED***;
 
-var Readable = require('_stream_readable'***REMOVED***;
-var Writable = require('_stream_writable'***REMOVED***;
+var Readable = require('../../lib/_stream_readable'***REMOVED***;
+var Writable = require('../../lib/_stream_writable'***REMOVED***;
 var util = require('util'***REMOVED***;
 
 util.inherits(TestReadable, Readable***REMOVED***;
diff --git a/test/simple/test-stream-pipe-cleanup.js b/test/simple/test-stream-pipe-cleanup.js
deleted file mode 100644
index f689358..0000000
--- a/test/simple/test-stream-pipe-cleanup.js
+++ /dev/null
@@ -1,122 +0,0 @@
-// Copyright Joyent, Inc. and other Node contributors.
-//
-// Permission is hereby granted, free of charge, to any person obtaining a
-// copy of this software and associated documentation files (the
-// "Software"***REMOVED***, to deal in the Software without restriction, including
-// without limitation the rights to use, copy, modify, merge, publish,
-// distribute, sublicense, and/or sell copies of the Software, and to permit
-// persons to whom the Software is furnished to do so, subject to the
-// following conditions:
-//
-// The above copyright notice and this permission notice shall be included
-// in all copies or substantial portions of the Software.
-//
-// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
-// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
-// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
-// USE OR OTHER DEALINGS IN THE SOFTWARE.
-
-// This test asserts that Stream.prototype.pipe does not leave listeners
-// hanging on the source or dest.
-
-var common = require('../common'***REMOVED***;
-var stream = require('stream'***REMOVED***;
-var assert = require('assert'***REMOVED***;
-var util = require('util'***REMOVED***;
-
-function Writable(***REMOVED*** {
-  this.writable = true;
-  this.endCalls = 0;
-  stream.Stream.call(this***REMOVED***;
-}
-util.inherits(Writable, stream.Stream***REMOVED***;
-Writable.prototype.end = function(***REMOVED*** {
-  this.endCalls++;
-};
-
-Writable.prototype.destroy = function(***REMOVED*** {
-  this.endCalls++;
-};
-
-function Readable(***REMOVED*** {
-  this.readable = true;
-  stream.Stream.call(this***REMOVED***;
-}
-util.inherits(Readable, stream.Stream***REMOVED***;
-
-function Duplex(***REMOVED*** {
-  this.readable = true;
-  Writable.call(this***REMOVED***;
-}
-util.inherits(Duplex, Writable***REMOVED***;
-
-var i = 0;
-var limit = 100;
-
-var w = new Writable(***REMOVED***;
-
-var r;
-
-for (i = 0; i < limit; i++***REMOVED*** {
-  r = new Readable(***REMOVED***;
-  r.pipe(w***REMOVED***;
-  r.emit('end'***REMOVED***;
-}
-assert.equal(0, r.listeners('end'***REMOVED***.length***REMOVED***;
-assert.equal(limit, w.endCalls***REMOVED***;
-
-w.endCalls = 0;
-
-for (i = 0; i < limit; i++***REMOVED*** {
-  r = new Readable(***REMOVED***;
-  r.pipe(w***REMOVED***;
-  r.emit('close'***REMOVED***;
-}
-assert.equal(0, r.listeners('close'***REMOVED***.length***REMOVED***;
-assert.equal(limit, w.endCalls***REMOVED***;
-
-w.endCalls = 0;
-
-r = new Readable(***REMOVED***;
-
-for (i = 0; i < limit; i++***REMOVED*** {
-  w = new Writable(***REMOVED***;
-  r.pipe(w***REMOVED***;
-  w.emit('close'***REMOVED***;
-}
-assert.equal(0, w.listeners('close'***REMOVED***.length***REMOVED***;
-
-r = new Readable(***REMOVED***;
-w = new Writable(***REMOVED***;
-var d = new Duplex(***REMOVED***;
-r.pipe(d***REMOVED***; // pipeline A
-d.pipe(w***REMOVED***; // pipeline B
-assert.equal(r.listeners('end'***REMOVED***.length, 2***REMOVED***;   // A.onend, A.cleanup
-assert.equal(r.listeners('close'***REMOVED***.length, 2***REMOVED***; // A.onclose, A.cleanup
-assert.equal(d.listeners('end'***REMOVED***.length, 2***REMOVED***;   // B.onend, B.cleanup
-assert.equal(d.listeners('close'***REMOVED***.length, 3***REMOVED***; // A.cleanup, B.onclose, B.cleanup
-assert.equal(w.listeners('end'***REMOVED***.length, 0***REMOVED***;
-assert.equal(w.listeners('close'***REMOVED***.length, 1***REMOVED***; // B.cleanup
-
-r.emit('end'***REMOVED***;
-assert.equal(d.endCalls, 1***REMOVED***;
-assert.equal(w.endCalls, 0***REMOVED***;
-assert.equal(r.listeners('end'***REMOVED***.length, 0***REMOVED***;
-assert.equal(r.listeners('close'***REMOVED***.length, 0***REMOVED***;
-assert.equal(d.listeners('end'***REMOVED***.length, 2***REMOVED***;   // B.onend, B.cleanup
-assert.equal(d.listeners('close'***REMOVED***.length, 2***REMOVED***; // B.onclose, B.cleanup
-assert.equal(w.listeners('end'***REMOVED***.length, 0***REMOVED***;
-assert.equal(w.listeners('close'***REMOVED***.length, 1***REMOVED***; // B.cleanup
-
-d.emit('end'***REMOVED***;
-assert.equal(d.endCalls, 1***REMOVED***;
-assert.equal(w.endCalls, 1***REMOVED***;
-assert.equal(r.listeners('end'***REMOVED***.length, 0***REMOVED***;
-assert.equal(r.listeners('close'***REMOVED***.length, 0***REMOVED***;
-assert.equal(d.listeners('end'***REMOVED***.length, 0***REMOVED***;
-assert.equal(d.listeners('close'***REMOVED***.length, 0***REMOVED***;
-assert.equal(w.listeners('end'***REMOVED***.length, 0***REMOVED***;
-assert.equal(w.listeners('close'***REMOVED***.length, 0***REMOVED***;
diff --git a/test/simple/test-stream-pipe-error-handling.js b/test/simple/test-stream-pipe-error-handling.js
index c5d724b..c7d6b7d 100644
--- a/test/simple/test-stream-pipe-error-handling.js
+++ b/test/simple/test-stream-pipe-error-handling.js
@@ -21,7 +21,7 @@
 
 var common = require('../common'***REMOVED***;
 var assert = require('assert'***REMOVED***;
-var Stream = require('stream'***REMOVED***.Stream;
+var Stream = require('../../'***REMOVED***.Stream;
 
 (function testErrorListenerCatches(***REMOVED*** {
   var source = new Stream(***REMOVED***;
diff --git a/test/simple/test-stream-pipe-event.js b/test/simple/test-stream-pipe-event.js
index cb9d5fe..56f8d61 100644
--- a/test/simple/test-stream-pipe-event.js
+++ b/test/simple/test-stream-pipe-event.js
@@ -20,7 +20,7 @@
 // USE OR OTHER DEALINGS IN THE SOFTWARE.
 
 var common = require('../common'***REMOVED***;
-var stream = require('stream'***REMOVED***;
+var stream = require('../../'***REMOVED***;
 var assert = require('assert'***REMOVED***;
 var util = require('util'***REMOVED***;
 
diff --git a/test/simple/test-stream-push-order.js b/test/simple/test-stream-push-order.js
index f2e6ec2..a5c9bf9 100644
--- a/test/simple/test-stream-push-order.js
+++ b/test/simple/test-stream-push-order.js
@@ -20,7 +20,7 @@
 // USE OR OTHER DEALINGS IN THE SOFTWARE.
 
 var common = require('../common.js'***REMOVED***;
-var Readable = require('stream'***REMOVED***.Readable;
+var Readable = require('../../'***REMOVED***.Readable;
 var assert = require('assert'***REMOVED***;
 
 var s = new Readable({
diff --git a/test/simple/test-stream-push-strings.js b/test/simple/test-stream-push-strings.js
index 06f43dc..1701a9a 100644
--- a/test/simple/test-stream-push-strings.js
+++ b/test/simple/test-stream-push-strings.js
@@ -22,7 +22,7 @@
 var common = require('../common'***REMOVED***;
 var assert = require('assert'***REMOVED***;
 
-var Readable = require('stream'***REMOVED***.Readable;
+var Readable = require('../../'***REMOVED***.Readable;
 var util = require('util'***REMOVED***;
 
 util.inherits(MyStream, Readable***REMOVED***;
diff --git a/test/simple/test-stream-readable-event.js b/test/simple/test-stream-readable-event.js
index ba6a577..a8e6f7b 100644
--- a/test/simple/test-stream-readable-event.js
+++ b/test/simple/test-stream-readable-event.js
@@ -22,7 +22,7 @@
 var common = require('../common'***REMOVED***;
 var assert = require('assert'***REMOVED***;
 
-var Readable = require('stream'***REMOVED***.Readable;
+var Readable = require('../../'***REMOVED***.Readable;
 
 (function first(***REMOVED*** {
   // First test, not reading when the readable is added.
diff --git a/test/simple/test-stream-readable-flow-recursion.js b/test/simple/test-stream-readable-flow-recursion.js
index 2891ad6..11689ba 100644
--- a/test/simple/test-stream-readable-flow-recursion.js
+++ b/test/simple/test-stream-readable-flow-recursion.js
@@ -27,7 +27,7 @@ var assert = require('assert'***REMOVED***;
 // more data continuously, but without triggering a nextTick
 // warning or RangeError.
 
-var Readable = require('stream'***REMOVED***.Readable;
+var Readable = require('../../'***REMOVED***.Readable;
 
 // throw an error if we trigger a nextTick warning.
 process.throwDeprecation = true;
diff --git a/test/simple/test-stream-unshift-empty-chunk.js b/test/simple/test-stream-unshift-empty-chunk.js
index 0c96476..7827538 100644
--- a/test/simple/test-stream-unshift-empty-chunk.js
+++ b/test/simple/test-stream-unshift-empty-chunk.js
@@ -24,7 +24,7 @@ var assert = require('assert'***REMOVED***;
 
 // This test verifies that stream.unshift(Buffer(0***REMOVED******REMOVED*** or 
 // stream.unshift(''***REMOVED*** does not set state.reading=false.
-var Readable = require('stream'***REMOVED***.Readable;
+var Readable = require('../../'***REMOVED***.Readable;
 
 var r = new Readable(***REMOVED***;
 var nChunks = 10;
diff --git a/test/simple/test-stream-unshift-read-race.js b/test/simple/test-stream-unshift-read-race.js
index 83fd9fa..17c18aa 100644
--- a/test/simple/test-stream-unshift-read-race.js
+++ b/test/simple/test-stream-unshift-read-race.js
@@ -29,7 +29,7 @@ var assert = require('assert'***REMOVED***;
 // 3. push(***REMOVED*** after the EOF signaling null is an error.
 // 4. _read(***REMOVED*** is not called after pushing the EOF null chunk.
 
-var stream = require('stream'***REMOVED***;
+var stream = require('../../'***REMOVED***;
 var hwm = 10;
 var r = stream.Readable({ highWaterMark: hwm }***REMOVED***;
 var chunks = 10;
@@ -51,7 +51,14 @@ r._read = function(n***REMOVED*** {
 
   function push(fast***REMOVED*** {
     assert(!pushedNull, 'push(***REMOVED*** after null push'***REMOVED***;
-    var c = pos >= data.length ? null : data.slice(pos, pos + n***REMOVED***;
+    var c;
+    if (pos >= data.length***REMOVED***
+      c = null;
+    else {
+      if (n + pos > data.length***REMOVED***
+        n = data.length - pos;
+      c = data.slice(pos, pos + n***REMOVED***;
+  ***REMOVED***
     pushedNull = c === null;
     if (fast***REMOVED*** {
       pos += n;
diff --git a/test/simple/test-stream-writev.js b/test/simple/test-stream-writev.js
index 5b49e6e..b5321f3 100644
--- a/test/simple/test-stream-writev.js
+++ b/test/simple/test-stream-writev.js
@@ -22,7 +22,7 @@
 var common = require('../common'***REMOVED***;
 var assert = require('assert'***REMOVED***;
 
-var stream = require('stream'***REMOVED***;
+var stream = require('../../'***REMOVED***;
 
 var queue = [];
 for (var decode = 0; decode < 2; decode++***REMOVED*** {
diff --git a/test/simple/test-stream2-basic.js b/test/simple/test-stream2-basic.js
index 3814bf0..248c1be 100644
--- a/test/simple/test-stream2-basic.js
+++ b/test/simple/test-stream2-basic.js
@@ -21,7 +21,7 @@
 
 
 var common = require('../common.js'***REMOVED***;
-var R = require('_stream_readable'***REMOVED***;
+var R = require('../../lib/_stream_readable'***REMOVED***;
 var assert = require('assert'***REMOVED***;
 
 var util = require('util'***REMOVED***;
diff --git a/test/simple/test-stream2-compatibility.js b/test/simple/test-stream2-compatibility.js
index 6cdd4e9..f0fa84b 100644
--- a/test/simple/test-stream2-compatibility.js
+++ b/test/simple/test-stream2-compatibility.js
@@ -21,7 +21,7 @@
 
 
 var common = require('../common.js'***REMOVED***;
-var R = require('_stream_readable'***REMOVED***;
+var R = require('../../lib/_stream_readable'***REMOVED***;
 var assert = require('assert'***REMOVED***;
 
 var util = require('util'***REMOVED***;
diff --git a/test/simple/test-stream2-finish-pipe.js b/test/simple/test-stream2-finish-pipe.js
index 39b274f..006a19b 100644
--- a/test/simple/test-stream2-finish-pipe.js
+++ b/test/simple/test-stream2-finish-pipe.js
@@ -20,7 +20,7 @@
 // USE OR OTHER DEALINGS IN THE SOFTWARE.
 
 var common = require('../common.js'***REMOVED***;
-var stream = require('stream'***REMOVED***;
+var stream = require('../../'***REMOVED***;
 var Buffer = require('buffer'***REMOVED***.Buffer;
 
 var r = new stream.Readable(***REMOVED***;
diff --git a/test/simple/test-stream2-fs.js b/test/simple/test-stream2-fs.js
deleted file mode 100644
index e162406..0000000
--- a/test/simple/test-stream2-fs.js
+++ /dev/null
@@ -1,72 +0,0 @@
-// Copyright Joyent, Inc. and other Node contributors.
-//
-// Permission is hereby granted, free of charge, to any person obtaining a
-// copy of this software and associated documentation files (the
-// "Software"***REMOVED***, to deal in the Software without restriction, including
-// without limitation the rights to use, copy, modify, merge, publish,
-// distribute, sublicense, and/or sell copies of the Software, and to permit
-// persons to whom the Software is furnished to do so, subject to the
-// following conditions:
-//
-// The above copyright notice and this permission notice shall be included
-// in all copies or substantial portions of the Software.
-//
-// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
-// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
-// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
-// USE OR OTHER DEALINGS IN THE SOFTWARE.
-
-
-var common = require('../common.js'***REMOVED***;
-var R = require('_stream_readable'***REMOVED***;
-var assert = require('assert'***REMOVED***;
-
-var fs = require('fs'***REMOVED***;
-var FSReadable = fs.ReadStream;
-
-var ***REMOVED***;
-var file = path.resolve(common.fixturesDir, 'x1024.txt'***REMOVED***;
-
-var size = fs.statSync(file***REMOVED***.size;
-
-var expectLengths = [1024];
-
-var util = require('util'***REMOVED***;
-var Stream = require('stream'***REMOVED***;
-
-util.inherits(TestWriter, Stream***REMOVED***;
-
-function TestWriter(***REMOVED*** {
-  Stream.apply(this***REMOVED***;
-  this.buffer = [];
-  this.length = 0;
-}
-
-TestWriter.prototype.write = function(c***REMOVED*** {
-  this.buffer.push(c.toString(***REMOVED******REMOVED***;
-  this.length += c.length;
-  return true;
-};
-
-TestWriter.prototype.end = function(c***REMOVED*** {
-  if (c***REMOVED*** this.buffer.push(c.toString(***REMOVED******REMOVED***;
-  this.emit('results', this.buffer***REMOVED***;
-}
-
-var r = new FSReadable(file***REMOVED***;
-var w = new TestWriter(***REMOVED***;
-
-w.on('results', function(res***REMOVED*** {
-  console.error(res, w.length***REMOVED***;
-  assert.equal(w.length, size***REMOVED***;
-  var l = 0;
-  assert.deepEqual(res.map(function (c***REMOVED*** {
-    return c.length;
-***REMOVED******REMOVED***, expectLengths***REMOVED***;
-  console.log('ok'***REMOVED***;
-}***REMOVED***;
-
-r.pipe(w***REMOVED***;
diff --git a/test/simple/test-stream2-httpclient-response-end.js b/test/simple/test-stream2-httpclient-response-end.js
deleted file mode 100644
index 15cffc2..0000000
--- a/test/simple/test-stream2-httpclient-response-end.js
+++ /dev/null
@@ -1,52 +0,0 @@
-// Copyright Joyent, Inc. and other Node contributors.
-//
-// Permission is hereby granted, free of charge, to any person obtaining a
-// copy of this software and associated documentation files (the
-// "Software"***REMOVED***, to deal in the Software without restriction, including
-// without limitation the rights to use, copy, modify, merge, publish,
-// distribute, sublicense, and/or sell copies of the Software, and to permit
-// persons to whom the Software is furnished to do so, subject to the
-// following conditions:
-//
-// The above copyright notice and this permission notice shall be included
-// in all copies or substantial portions of the Software.
-//
-// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
-// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
-// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
-// USE OR OTHER DEALINGS IN THE SOFTWARE.
-
-var common = require('../common.js'***REMOVED***;
-var assert = require('assert'***REMOVED***;
-var ***REMOVED***;
-var msg = 'Hello';
-var readable_event = false;
-var end_event = false;
-var server = http.createServer(function(req, res***REMOVED*** {
-  res.writeHead(200, {'Content-Type': 'text/plain'}***REMOVED***;
-  res.end(msg***REMOVED***;
-}***REMOVED***.listen(common.PORT, function(***REMOVED*** {
-  http.get({port: common.PORT}, function(res***REMOVED*** {
-    var data = '';
-    res.on('readable', function(***REMOVED*** {
-      console.log('readable event'***REMOVED***;
-      readable_event = true;
-      data += res.read(***REMOVED***;
-  ***REMOVED******REMOVED***;
-    res.on('end', function(***REMOVED*** {
-      console.log('end event'***REMOVED***;
-      end_event = true;
-      assert.strictEqual(msg, data***REMOVED***;
-      server.close(***REMOVED***;
-  ***REMOVED******REMOVED***;
-***REMOVED******REMOVED***;
-}***REMOVED***;
-
-process.on('exit', function(***REMOVED*** {
-  assert(readable_event***REMOVED***;
-  assert(end_event***REMOVED***;
-}***REMOVED***;
-
diff --git a/test/simple/test-stream2-large-read-stall.js b/test/simple/test-stream2-large-read-stall.js
index 2fbfbca..667985b 100644
--- a/test/simple/test-stream2-large-read-stall.js
+++ b/test/simple/test-stream2-large-read-stall.js
@@ -30,7 +30,7 @@ var PUSHSIZE = 20;
 var PUSHCOUNT = 1000;
 var HWM = 50;
 
-var Readable = require('stream'***REMOVED***.Readable;
+var Readable = require('../../'***REMOVED***.Readable;
 var r = new Readable({
   highWaterMark: HWM
 }***REMOVED***;
@@ -39,23 +39,23 @@ var rs = r._readableState;
 r._read = push;
 
 r.on('readable', function(***REMOVED*** {
-  console.error('>> readable'***REMOVED***;
+  //console.error('>> readable'***REMOVED***;
   do {
-    console.error('  > read(%d***REMOVED***', READSIZE***REMOVED***;
+    //console.error('  > read(%d***REMOVED***', READSIZE***REMOVED***;
     var ret = r.read(READSIZE***REMOVED***;
-    console.error('  < %j (%d remain***REMOVED***', ret && ret.length, rs.length***REMOVED***;
+    //console.error('  < %j (%d remain***REMOVED***', ret && ret.length, rs.length***REMOVED***;
 ***REMOVED*** while (ret && ret.length === READSIZE***REMOVED***;
 
-  console.error('<< after read(***REMOVED***',
-                ret && ret.length,
-                rs.needReadable,
-                rs.length***REMOVED***;
+  //console.error('<< after read(***REMOVED***',
+  //              ret && ret.length,
+  //              rs.needReadable,
+  //              rs.length***REMOVED***;
 }***REMOVED***;
 
 var endEmitted = false;
 r.on('end', function(***REMOVED*** {
   endEmitted = true;
-  console.error('end'***REMOVED***;
+  //console.error('end'***REMOVED***;
 }***REMOVED***;
 
 var pushes = 0;
@@ -64,11 +64,11 @@ function push(***REMOVED*** {
     return;
 
   if (pushes++ === PUSHCOUNT***REMOVED*** {
-    console.error('   push(EOF***REMOVED***'***REMOVED***;
+    //console.error('   push(EOF***REMOVED***'***REMOVED***;
     return r.push(null***REMOVED***;
 ***REMOVED***
 
-  console.error('   push #%d', pushes***REMOVED***;
+  //console.error('   push #%d', pushes***REMOVED***;
   if (r.push(new Buffer(PUSHSIZE***REMOVED******REMOVED******REMOVED***
     setTimeout(push***REMOVED***;
 }
diff --git a/test/simple/test-stream2-objects.js b/test/simple/test-stream2-objects.js
index 3e6931d..ff47d89 100644
--- a/test/simple/test-stream2-objects.js
+++ b/test/simple/test-stream2-objects.js
@@ -21,8 +21,8 @@
 
 
 var common = require('../common.js'***REMOVED***;
-var Readable = require('_stream_readable'***REMOVED***;
-var Writable = require('_stream_writable'***REMOVED***;
+var Readable = require('../../lib/_stream_readable'***REMOVED***;
+var Writable = require('../../lib/_stream_writable'***REMOVED***;
 var assert = require('assert'***REMOVED***;
 
 // tiny node-tap lookalike.
diff --git a/test/simple/test-stream2-pipe-error-handling.js b/test/simple/test-stream2-pipe-error-handling.js
index cf7531c..e3f3e4e 100644
--- a/test/simple/test-stream2-pipe-error-handling.js
+++ b/test/simple/test-stream2-pipe-error-handling.js
@@ -21,7 +21,7 @@
 
 var common = require('../common'***REMOVED***;
 var assert = require('assert'***REMOVED***;
-var stream = require('stream'***REMOVED***;
+var stream = require('../../'***REMOVED***;
 
 (function testErrorListenerCatches(***REMOVED*** {
   var count = 1000;
diff --git a/test/simple/test-stream2-pipe-error-once-listener.js b/test/simple/test-stream2-pipe-error-once-listener.js
index 5e8e3cb..53b2616 100755
--- a/test/simple/test-stream2-pipe-error-once-listener.js
+++ b/test/simple/test-stream2-pipe-error-once-listener.js
@@ -24,7 +24,7 @@ var common = require('../common.js'***REMOVED***;
 var assert = require('assert'***REMOVED***;
 
 var util = require('util'***REMOVED***;
-var stream = require('stream'***REMOVED***;
+var stream = require('../../'***REMOVED***;
 
 
 var Read = function(***REMOVED*** {
diff --git a/test/simple/test-stream2-push.js b/test/simple/test-stream2-push.js
index b63edc3..eb2b0e9 100644
--- a/test/simple/test-stream2-push.js
+++ b/test/simple/test-stream2-push.js
@@ -20,7 +20,7 @@
 // USE OR OTHER DEALINGS IN THE SOFTWARE.
 
 var common = require('../common.js'***REMOVED***;
-var stream = require('stream'***REMOVED***;
+var stream = require('../../'***REMOVED***;
 var Readable = stream.Readable;
 var Writable = stream.Writable;
 var assert = require('assert'***REMOVED***;
diff --git a/test/simple/test-stream2-read-sync-stack.js b/test/simple/test-stream2-read-sync-stack.js
index e8a7305..9740a47 100644
--- a/test/simple/test-stream2-read-sync-stack.js
+++ b/test/simple/test-stream2-read-sync-stack.js
@@ -21,7 +21,7 @@
 
 var common = require('../common'***REMOVED***;
 var assert = require('assert'***REMOVED***;
-var Readable = require('stream'***REMOVED***.Readable;
+var Readable = require('../../'***REMOVED***.Readable;
 var r = new Readable(***REMOVED***;
 var N = 256 * 1024;
 
diff --git a/test/simple/test-stream2-readable-empty-buffer-no-eof.js b/test/simple/test-stream2-readable-empty-buffer-no-eof.js
index cd30178..4b1659d 100644
--- a/test/simple/test-stream2-readable-empty-buffer-no-eof.js
+++ b/test/simple/test-stream2-readable-empty-buffer-no-eof.js
@@ -22,10 +22,9 @@
 var common = require('../common'***REMOVED***;
 var assert = require('assert'***REMOVED***;
 
-var Readable = require('stream'***REMOVED***.Readable;
+var Readable = require('../../'***REMOVED***.Readable;
 
 test1(***REMOVED***;
-test2(***REMOVED***;
 
 function test1(***REMOVED*** {
   var r = new Readable(***REMOVED***;
@@ -88,31 +87,3 @@ function test1(***REMOVED*** {
     console.log('ok'***REMOVED***;
 ***REMOVED******REMOVED***;
 }
-
-function test2(***REMOVED*** {
-  var r = new Readable({ encoding: 'base64' }***REMOVED***;
-  var reads = 5;
-  r._read = function(n***REMOVED*** {
-    if (!reads--***REMOVED***
-      return r.push(null***REMOVED***; // EOF
-    else
-      return r.push(new Buffer('x'***REMOVED******REMOVED***;
-***REMOVED***;
-
-  var results = [];
-  function flow(***REMOVED*** {
-    var chunk;
-    while (null !== (chunk = r.read(***REMOVED******REMOVED******REMOVED***
-      results.push(chunk + ''***REMOVED***;
-***REMOVED***
-  r.on('readable', flow***REMOVED***;
-  r.on('end', function(***REMOVED*** {
-    results.push('EOF'***REMOVED***;
-***REMOVED******REMOVED***;
-  flow(***REMOVED***;
-
-  process.on('exit', function(***REMOVED*** {
-    assert.deepEqual(results, [ 'eHh4', 'eHg=', 'EOF' ]***REMOVED***;
-    console.log('ok'***REMOVED***;
-***REMOVED******REMOVED***;
-}
diff --git a/test/simple/test-stream2-readable-from-list.js b/test/simple/test-stream2-readable-from-list.js
index 7c96ffe..04a96f5 100644
--- a/test/simple/test-stream2-readable-from-list.js
+++ b/test/simple/test-stream2-readable-from-list.js
@@ -21,7 +21,7 @@
 
 var assert = require('assert'***REMOVED***;
 var common = require('../common.js'***REMOVED***;
-var fromList = require('_stream_readable'***REMOVED***._fromList;
+var fromList = require('../../lib/_stream_readable'***REMOVED***._fromList;
 
 // tiny node-tap lookalike.
 var tests = [];
diff --git a/test/simple/test-stream2-readable-legacy-drain.js b/test/simple/test-stream2-readable-legacy-drain.js
index 675da8e..51fd3d5 100644
--- a/test/simple/test-stream2-readable-legacy-drain.js
+++ b/test/simple/test-stream2-readable-legacy-drain.js
@@ -22,7 +22,7 @@
 var common = require('../common'***REMOVED***;
 var assert = require('assert'***REMOVED***;
 
-var Stream = require('stream'***REMOVED***;
+var Stream = require('../../'***REMOVED***;
 var Readable = Stream.Readable;
 
 var r = new Readable(***REMOVED***;
diff --git a/test/simple/test-stream2-readable-non-empty-end.js b/test/simple/test-stream2-readable-non-empty-end.js
index 7314ae7..c971898 100644
--- a/test/simple/test-stream2-readable-non-empty-end.js
+++ b/test/simple/test-stream2-readable-non-empty-end.js
@@ -21,7 +21,7 @@
 
 var assert = require('assert'***REMOVED***;
 var common = require('../common.js'***REMOVED***;
-var Readable = require('_stream_readable'***REMOVED***;
+var Readable = require('../../lib/_stream_readable'***REMOVED***;
 
 var len = 0;
 var chunks = new Array(10***REMOVED***;
diff --git a/test/simple/test-stream2-readable-wrap-empty.js b/test/simple/test-stream2-readable-wrap-empty.js
index 2e5cf25..fd8a3dc 100644
--- a/test/simple/test-stream2-readable-wrap-empty.js
+++ b/test/simple/test-stream2-readable-wrap-empty.js
@@ -22,7 +22,7 @@
 var common = require('../common'***REMOVED***;
 var assert = require('assert'***REMOVED***;
 
-var Readable = require('_stream_readable'***REMOVED***;
+var Readable = require('../../lib/_stream_readable'***REMOVED***;
 var EE = require('events'***REMOVED***.EventEmitter;
 
 var oldStream = new EE(***REMOVED***;
diff --git a/test/simple/test-stream2-readable-wrap.js b/test/simple/test-stream2-readable-wrap.js
index 90eea01..6b177f7 100644
--- a/test/simple/test-stream2-readable-wrap.js
+++ b/test/simple/test-stream2-readable-wrap.js
@@ -22,8 +22,8 @@
 var common = require('../common'***REMOVED***;
 var assert = require('assert'***REMOVED***;
 
-var Readable = require('_stream_readable'***REMOVED***;
-var Writable = require('_stream_writable'***REMOVED***;
+var Readable = require('../../lib/_stream_readable'***REMOVED***;
+var Writable = require('../../lib/_stream_writable'***REMOVED***;
 var EE = require('events'***REMOVED***.EventEmitter;
 
 var testRuns = 0, completedRuns = 0;
diff --git a/test/simple/test-stream2-set-encoding.js b/test/simple/test-stream2-set-encoding.js
index 5d2c32a..685531b 100644
--- a/test/simple/test-stream2-set-encoding.js
+++ b/test/simple/test-stream2-set-encoding.js
@@ -22,7 +22,7 @@
 
 var common = require('../common.js'***REMOVED***;
 var assert = require('assert'***REMOVED***;
-var R = require('_stream_readable'***REMOVED***;
+var R = require('../../lib/_stream_readable'***REMOVED***;
 var util = require('util'***REMOVED***;
 
 // tiny node-tap lookalike.
diff --git a/test/simple/test-stream2-transform.js b/test/simple/test-stream2-transform.js
index 9c9ddd8..a0cacc6 100644
--- a/test/simple/test-stream2-transform.js
+++ b/test/simple/test-stream2-transform.js
@@ -21,8 +21,8 @@
 
 var assert = require('assert'***REMOVED***;
 var common = require('../common.js'***REMOVED***;
-var PassThrough = require('_stream_passthrough'***REMOVED***;
-var Transform = require('_stream_transform'***REMOVED***;
+var PassThrough = require('../../'***REMOVED***.PassThrough;
+var Transform = require('../../'***REMOVED***.Transform;
 
 // tiny node-tap lookalike.
 var tests = [];
diff --git a/test/simple/test-stream2-unpipe-drain.js b/test/simple/test-stream2-unpipe-drain.js
index d66dc3c..365b327 100644
--- a/test/simple/test-stream2-unpipe-drain.js
+++ b/test/simple/test-stream2-unpipe-drain.js
@@ -22,7 +22,7 @@
 
 var common = require('../common.js'***REMOVED***;
 var assert = require('assert'***REMOVED***;
-var stream = require('stream'***REMOVED***;
+var stream = require('../../'***REMOVED***;
 var crypto = require('crypto'***REMOVED***;
 
 var util = require('util'***REMOVED***;
diff --git a/test/simple/test-stream2-unpipe-leak.js b/test/simple/test-stream2-unpipe-leak.js
index 99f8746..17c92ae 100644
--- a/test/simple/test-stream2-unpipe-leak.js
+++ b/test/simple/test-stream2-unpipe-leak.js
@@ -22,7 +22,7 @@
 
 var common = require('../common.js'***REMOVED***;
 var assert = require('assert'***REMOVED***;
-var stream = require('stream'***REMOVED***;
+var stream = require('../../'***REMOVED***;
 
 var chunk = new Buffer('hallo'***REMOVED***;
 
diff --git a/test/simple/test-stream2-writable.js b/test/simple/test-stream2-writable.js
index 704100c..209c3a6 100644
--- a/test/simple/test-stream2-writable.js
+++ b/test/simple/test-stream2-writable.js
@@ -20,8 +20,8 @@
 // USE OR OTHER DEALINGS IN THE SOFTWARE.
 
 var common = require('../common.js'***REMOVED***;
-var W = require('_stream_writable'***REMOVED***;
-var D = require('_stream_duplex'***REMOVED***;
+var W = require('../../'***REMOVED***.Writable;
+var D = require('../../'***REMOVED***.Duplex;
 var assert = require('assert'***REMOVED***;
 
 var util = require('util'***REMOVED***;
diff --git a/test/simple/test-stream3-pause-then-read.js b/test/simple/test-stream3-pause-then-read.js
index b91bde3..2f72c15 100644
--- a/test/simple/test-stream3-pause-then-read.js
+++ b/test/simple/test-stream3-pause-then-read.js
@@ -22,7 +22,7 @@
 var common = require('../common'***REMOVED***;
 var assert = require('assert'***REMOVED***;
 
-var stream = require('stream'***REMOVED***;
+var stream = require('../../'***REMOVED***;
 var Readable = stream.Readable;
 var Writable = stream.Writable;
 
