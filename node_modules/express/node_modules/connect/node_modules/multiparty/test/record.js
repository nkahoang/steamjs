var ***REMOVED***;
var fs = require('fs'***REMOVED***;
var connections = 0;

var server = http.createServer(function(req, res***REMOVED*** {
  var socket = req.socket;
  console.log('Request: %s %s -> %s', req.method, req.url, socket.filename***REMOVED***;

  req.on('end', function(***REMOVED*** {
    if (req.url !== '/'***REMOVED*** {
      res.end(JSON.stringify({
        method: req.method,
        url: req.url,
        filename: socket.filename,
    ***REMOVED******REMOVED******REMOVED***;
      return;
  ***REMOVED***

    res.writeHead(200, {'content-type': 'text/html'}***REMOVED***;
    res.end(
      '<form action="/upload" enctype="multipart/form-data" method="post">'+
      '<input type="text" name="title"><br>'+
      '<input type="file" name="upload" multiple="multiple"><br>'+
      '<input type="submit" value="Upload">'+
      '</form>'
    ***REMOVED***;
***REMOVED******REMOVED***;
}***REMOVED***;

server.on('connection', function(socket***REMOVED*** {
  connections++;

  socket.id = connections;
  socket.filename = 'connection-' + socket.id + '.http';
  socket.file = fs.createWriteStream(socket.filename***REMOVED***;
  socket.pipe(socket.file***REMOVED***;

  console.log('--> %s', socket.filename***REMOVED***;
  socket.on('close', function(***REMOVED*** {
    console.log('<-- %s', socket.filename***REMOVED***;
***REMOVED******REMOVED***;
}***REMOVED***;

var port = process.env.PORT || 8080;
server.listen(port, function(***REMOVED*** {
  console.log('Recording connections on port %s', port***REMOVED***;
}***REMOVED***;
