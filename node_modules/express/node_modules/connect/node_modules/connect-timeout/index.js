/*!
 * Connect - timeout
 * Ported from https://github.com/LearnBoost/connect-timeout
 * MIT Licensed
 */

/**
 * Module dependencies.
 */

var debug = require('debug'***REMOVED***('connect:timeout'***REMOVED***;

/**
 * Timeout:
 *
 * Times out the request in `ms`, defaulting to `5000`. The
 * method `req.clearTimeout(***REMOVED***` is added to revert this behaviour
 * programmatically within your application's middleware, routes, etc.
 *
 * The timeout error is passed to `next(***REMOVED***` so that you may customize
 * the response behaviour. This error has the `.timeout` property as
 * well as `.status == 503`.
 *
 * @param {Number} ms
 * @return {Function}
 * @api public
 */

module.exports = function timeout(ms***REMOVED*** {
  ms = ms || 5000;

  return function(req, res, next***REMOVED*** {
    var id = setTimeout(function(***REMOVED***{
      req.emit('timeout', ms***REMOVED***;
  ***REMOVED***, ms***REMOVED***;

    req.on('timeout', function(***REMOVED***{
      if (res.headersSent***REMOVED*** return debug('response started, cannot timeout'***REMOVED***;
      var err = new Error('Response timeout'***REMOVED***;
      err.timeout = ms;
      err.status = 503;
      next(err***REMOVED***;
  ***REMOVED******REMOVED***;

    req.clearTimeout = function(***REMOVED***{
      clearTimeout(id***REMOVED***;
  ***REMOVED***;

    var writeHead = res.writeHead;
    res.writeHead = function(***REMOVED***{
      clearTimeout(id***REMOVED***;
      writeHead.apply(res, arguments***REMOVED***;
  ***REMOVED***

    next(***REMOVED***;
***REMOVED***;
};
