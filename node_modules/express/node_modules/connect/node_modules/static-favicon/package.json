{
  "name": "static-favicon",
  "version": "1.0.0",
  "description": "favicon serving middleware with caching",
  "keywords": [
    "favicon",
    "middleware"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/expressjs/favicon.git"
***REMOVED***,
  "author": {
    "name": "TJ Holowaychuk",
    "email": "tj@vision-media.ca",
    "url": "http://tjholowaychuk.com"
***REMOVED***,
  "dependencies": {},
  "devDependencies": {
    "mocha": ">= 1.17.0"
***REMOVED***,
  "licenses": "MIT",
  "main": "./index.js",
  "engines": {
    "node": ">= 0.10.0"
***REMOVED***,
  "scripts": {
    "test": "mocha"
***REMOVED***,
  "readme": "# static-favicon\n\nexpress/connect middleware to serves a favicon.\n\n```js\napp.use(favicon(__dirname + '/public/favicon.ico'***REMOVED******REMOVED***;\n```\n\nTypically this middleware will come very early in your stack (maybe even first***REMOVED*** to avoid processing any other middleware if we already know the request is for favicon.ico\n\n## api\n\n### favicon(path, options***REMOVED***\n\nCreate new middleware to serve a favicon from the given `path` to a favicon file.\n\n**options**\n\n  - `maxAge`  cache-control max-age directive, defaulting to 1 day\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/expressjs/favicon/issues"
***REMOVED***,
  "homepage": "https://github.com/expressjs/favicon",
  "_id": "static-favicon@1.0.0",
  "dist": {
    "shasum": "bd44c97d19c327277b27058ced535ce820ad6902"
***REMOVED***,
  "_from": "static-favicon@1.0.0",
  "_resolved": "https://registry.npmjs.org/static-favicon/-/static-favicon-1.0.0.tgz"
}
