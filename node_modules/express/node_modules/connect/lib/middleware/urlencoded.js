/*!
 * Connect - urlencoded
 * Copyright(c***REMOVED*** 2010 Sencha Inc.
 * Copyright(c***REMOVED*** 2011 TJ Holowaychuk
 * MIT Licensed
 */

/**
 * Module dependencies.
 */

var utils = require('../utils'***REMOVED***;
var getBody = require('raw-body'***REMOVED***;
var qs = require('qs'***REMOVED***;

/**
 * Urlencoded:
 *
 *  Parse x-ww-form-urlencoded request bodies,
 *  providing the parsed object as `req.body` using
 *  [qs](https://github.com/visionmedia/node-querystring***REMOVED***.
 *
 * Options:
 *
 *    - `limit`  byte limit [1mb]
 *
 * @param {Object} options
 * @return {Function}
 * @api public
 */

exports = module.exports = function(options***REMOVED***{
  options = options || {};
  var verify = typeof options.verify === 'function' && options.verify;

  return function urlencoded(req, res, next***REMOVED*** {
    if (req._body***REMOVED*** return next(***REMOVED***;
    req.body = req.body || {};

    if (!utils.hasBody(req***REMOVED******REMOVED*** return next(***REMOVED***;

    // check Content-Type
    if ('application/x-www-form-urlencoded' != utils.mime(req***REMOVED******REMOVED*** return next(***REMOVED***;

    // flag as parsed
    req._body = true;

    // parse
    getBody(req, {
      limit: options.limit || '1mb',
      length: req.headers['content-length'],
      encoding: 'utf8'
  ***REMOVED***, function (err, buf***REMOVED*** {
      if (err***REMOVED*** return next(err***REMOVED***;

      if (verify***REMOVED*** {
        try {
          verify(req, res, buf***REMOVED***
      ***REMOVED*** catch (err***REMOVED*** {
          if (!err.status***REMOVED*** err.status = 403;
          return next(err***REMOVED***;
      ***REMOVED***
    ***REMOVED***

      try {
        req.body = buf.length
          ? qs.parse(buf***REMOVED***
          : {};
    ***REMOVED*** catch (err***REMOVED***{
        err.body = buf;
        return next(err***REMOVED***;
    ***REMOVED***
      next(***REMOVED***;
  ***REMOVED******REMOVED***
***REMOVED***
};
