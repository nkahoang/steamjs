
/**
 * Parse "Range" header `str` relative to the given file `size`.
 *
 * @param {Number} size
 * @param {String} str
 * @return {Array}
 * @api public
 */

module.exports = function(size, str***REMOVED***{
  var valid = true;
  var i = str.indexOf('='***REMOVED***;

  if (-1 == i***REMOVED*** return -2;

  var arr = str.slice(i + 1***REMOVED***.split(','***REMOVED***.map(function(range***REMOVED***{
    var range = range.split('-'***REMOVED***
      , start = parseInt(range[0], 10***REMOVED***
      , end = parseInt(range[1], 10***REMOVED***;

    // -nnn
    if (isNaN(start***REMOVED******REMOVED*** {
      start = size - end;
      end = size - 1;
    // nnn-
  ***REMOVED*** else if (isNaN(end***REMOVED******REMOVED*** {
      end = size - 1;
  ***REMOVED***

    // limit last-byte-pos to current length
    if (end > size - 1***REMOVED*** end = size - 1;

    // invalid
    if (isNaN(start***REMOVED***
      || isNaN(end***REMOVED***
      || start > end
      || start < 0***REMOVED*** valid = false;

    return {
      start: start,
      end: end
  ***REMOVED***;
***REMOVED******REMOVED***;

  arr.type = str.slice(0, i***REMOVED***;

  return valid ? arr : -1;
};