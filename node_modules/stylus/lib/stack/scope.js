
/*!
 * Stylus - stack - Scope
 * Copyright(c***REMOVED*** 2010 LearnBoost <dev@learnboost.com>
 * MIT Licensed
 */

/**
 * Initialize a new `Scope`.
 *
 * @api private
 */

var Scope = module.exports = function Scope(***REMOVED*** {
  this.locals = {};
};

/**
 * Add `ident` node to the current scope.
 *
 * @param {Ident} ident
 * @api private
 */

Scope.prototype.add = function(ident***REMOVED***{
  this.locals[ident.name] = ident.val;
};

/**
 * Lookup the given local variable `name`.
 *
 * @param {String} name
 * @return {Node}
 * @api private
 */

Scope.prototype.lookup = function(name***REMOVED***{
  return this.locals[name];
};

/**
 * Custom inspect.
 *
 * @return {String}
 * @api public
 */

Scope.prototype.inspect = function(***REMOVED***{
  var keys = Object.keys(this.locals***REMOVED***.map(function(key***REMOVED***{ return '@' + key; }***REMOVED***;
  return '[Scope'
    + (keys.length ? ' ' + keys.join(', '***REMOVED*** : ''***REMOVED***
    + ']';
};
