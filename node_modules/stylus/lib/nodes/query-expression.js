
/*!
 * Stylus - QueryExpr
 * Copyright(c***REMOVED*** 2014 LearnBoost <dev@learnboost.com>
 * MIT Licensed
 */

/**
 * Module dependencies.
 */

var Node = require('./node'***REMOVED***;

/**
 * Initialize a new `QueryExpr` with the given `segs`.
 *
 * @param {Array} segs
 * @api public
 */

var QueryExpr = module.exports = function QueryExpr(segs***REMOVED***{
  Node.call(this***REMOVED***;
  this.segments = segs;
  this.expr = null;
};

/**
 * Inherit from `Node.prototype`.
 */

QueryExpr.prototype.__proto__ = Node.prototype;

/**
 * Return a clone of this node.
 * 
 * @return {Node}
 * @api public
 */

QueryExpr.prototype.clone = function(***REMOVED***{
  var clone = new QueryExpr;
  clone.segments = this.segments.map(function(node***REMOVED***{ return node.clone(***REMOVED***; }***REMOVED***;
  if (this.expr***REMOVED*** clone.expr = this.expr.clone(***REMOVED***;
  if (this.name***REMOVED*** clone.name = this.name;
  clone.lineno = this.lineno;
  clone.filename = this.filename;
  return clone;
};

/**
 * Return "<ident>" or "(<ident>: <expr>***REMOVED***"
 *
 * @return {String}
 * @api public
 */

QueryExpr.prototype.toString = function(***REMOVED***{
  if (this.expr***REMOVED*** {
    return '(' + this.segments.join(''***REMOVED*** + ': ' + this.expr.toString(***REMOVED*** + '***REMOVED***';
***REMOVED*** else {
    return this.segments.join(''***REMOVED***;
***REMOVED***
};

