// show that no match events happen while paused.
var tap = require("tap"***REMOVED***
, child_process = require("child_process"***REMOVED***
// just some gnarly pattern with lots of matches
, pattern = "test/a/!(symlink***REMOVED***/**"
, bashResults = require("./bash-results.json"***REMOVED***
, patterns = Object.keys(bashResults***REMOVED***
, glob = require("../"***REMOVED***
, Glob = glob.Glob
, path = require("path"***REMOVED***

// run from the root of the project
// this is usually where you're at anyway, but be sure.
process.chdir(path.resolve(__dirname, ".."***REMOVED******REMOVED***

function alphasort (a, b***REMOVED*** {
  a = a.toLowerCase(***REMOVED***
  b = b.toLowerCase(***REMOVED***
  return a > b ? 1 : a < b ? -1 : 0
}

function cleanResults (m***REMOVED*** {
  // normalize discrepancies in ordering, duplication,
  // and ending slashes.
  return m.map(function (m***REMOVED*** {
    return m.replace(/\/+/g, "/"***REMOVED***.replace(/\/$/, ""***REMOVED***
***REMOVED******REMOVED***.sort(alphasort***REMOVED***.reduce(function (set, f***REMOVED*** {
    if (f !== set[set.length - 1]***REMOVED*** set.push(f***REMOVED***
    return set
***REMOVED***, []***REMOVED***.sort(alphasort***REMOVED***.map(function (f***REMOVED*** {
    // de-windows
    return (process.platform !== 'win32'***REMOVED*** ? f
           : f.replace(/^[a-zA-Z]:\\\\/, '/'***REMOVED***.replace(/\\/g, '/'***REMOVED***
***REMOVED******REMOVED***
}

var globResults = []
tap.test("use a Glob object, and pause/resume it", function (t***REMOVED*** {
  var g = new Glob(pattern***REMOVED***
  , paused = false
  , res = []
  , expect = bashResults[pattern]

  g.on("pause", function (***REMOVED*** {
    console.error("pause"***REMOVED***
***REMOVED******REMOVED***

  g.on("resume", function (***REMOVED*** {
    console.error("resume"***REMOVED***
***REMOVED******REMOVED***

  g.on("match", function (m***REMOVED*** {
    t.notOk(g.paused, "must not be paused"***REMOVED***
    globResults.push(m***REMOVED***
    g.pause(***REMOVED***
    t.ok(g.paused, "must be paused"***REMOVED***
    setTimeout(g.resume.bind(g***REMOVED***, 10***REMOVED***
***REMOVED******REMOVED***

  g.on("end", function (matches***REMOVED*** {
    t.pass("reached glob end"***REMOVED***
    globResults = cleanResults(globResults***REMOVED***
    matches = cleanResults(matches***REMOVED***
    t.deepEqual(matches, globResults,
      "end event matches should be the same as match events"***REMOVED***

    t.deepEqual(matches, expect,
      "glob matches should be the same as bash results"***REMOVED***

    t.end(***REMOVED***
***REMOVED******REMOVED***
}***REMOVED***

