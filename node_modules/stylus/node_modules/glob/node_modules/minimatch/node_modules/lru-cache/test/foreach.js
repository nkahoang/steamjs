var test = require('tap'***REMOVED***.test
var LRU = require('../'***REMOVED***

test('forEach', function (t***REMOVED*** {
  var l = new LRU(5***REMOVED***
  for (var i = 0; i < 10; i ++***REMOVED*** {
    l.set(i.toString(***REMOVED***, i.toString(2***REMOVED******REMOVED***
***REMOVED***

  var i = 9
  l.forEach(function (val, key, cache***REMOVED*** {
    t.equal(cache, l***REMOVED***
    t.equal(key, i.toString(***REMOVED******REMOVED***
    t.equal(val, i.toString(2***REMOVED******REMOVED***
    i -= 1
***REMOVED******REMOVED***

  // get in order of most recently used
  l.get(6***REMOVED***
  l.get(8***REMOVED***

  var order = [ 8, 6, 9, 7, 5 ]
  var i = 0

  l.forEach(function (val, key, cache***REMOVED*** {
    var j = order[i ++]
    t.equal(cache, l***REMOVED***
    t.equal(key, j.toString(***REMOVED******REMOVED***
    t.equal(val, j.toString(2***REMOVED******REMOVED***
***REMOVED******REMOVED***

  t.end(***REMOVED***
}***REMOVED***

test('keys(***REMOVED*** and values(***REMOVED***', function (t***REMOVED*** {
  var l = new LRU(5***REMOVED***
  for (var i = 0; i < 10; i ++***REMOVED*** {
    l.set(i.toString(***REMOVED***, i.toString(2***REMOVED******REMOVED***
***REMOVED***

  t.similar(l.keys(***REMOVED***, ['9', '8', '7', '6', '5']***REMOVED***
  t.similar(l.values(***REMOVED***, ['1001', '1000', '111', '110', '101']***REMOVED***

  // get in order of most recently used
  l.get(6***REMOVED***
  l.get(8***REMOVED***

  t.similar(l.keys(***REMOVED***, ['8', '6', '9', '7', '5']***REMOVED***
  t.similar(l.values(***REMOVED***, ['1000', '110', '1001', '111', '101']***REMOVED***

  t.end(***REMOVED***
}***REMOVED***
