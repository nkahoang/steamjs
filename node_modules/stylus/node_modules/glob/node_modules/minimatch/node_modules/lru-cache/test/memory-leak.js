#!/usr/bin/env node --expose_gc

var weak = require('weak'***REMOVED***;
var test = require('tap'***REMOVED***.test
var LRU = require('../'***REMOVED***
var l = new LRU({ max: 10 }***REMOVED***
var refs = 0
function X(***REMOVED*** {
  refs ++
  weak(this, deref***REMOVED***
}

function deref(***REMOVED*** {
  refs --
}

test('no leaks', function (t***REMOVED*** {
  // fill up the cache
  for (var i = 0; i < 100; i++***REMOVED*** {
    l.set(i, new X***REMOVED***;
    // throw some gets in there, too.
    if (i % 2 === 0***REMOVED***
      l.get(i / 2***REMOVED***
***REMOVED***

  gc(***REMOVED***

  var start = process.memoryUsage(***REMOVED***

  // capture the memory
  var startRefs = refs

  // do it again, but more
  for (var i = 0; i < 10000; i++***REMOVED*** {
    l.set(i, new X***REMOVED***;
    // throw some gets in there, too.
    if (i % 2 === 0***REMOVED***
      l.get(i / 2***REMOVED***
***REMOVED***

  gc(***REMOVED***

  var end = process.memoryUsage(***REMOVED***
  t.equal(refs, startRefs, 'no leaky refs'***REMOVED***

  console.error('start: %j\n' +
                'end:   %j', start, end***REMOVED***;
  t.pass(***REMOVED***;
  t.end(***REMOVED***;
}***REMOVED***
