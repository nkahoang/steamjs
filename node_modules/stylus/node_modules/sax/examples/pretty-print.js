var sax = require("../lib/sax"***REMOVED***
  , printer = sax.createStream(false, {lowercasetags:true, trim:true}***REMOVED***
  , fs = require("fs"***REMOVED***

function entity (str***REMOVED*** {
  return str.replace('"', '&quot;'***REMOVED***
}

printer.tabstop = 2
printer.level = 0
printer.indent = function (***REMOVED*** {
  print("\n"***REMOVED***
  for (var i = this.level; i > 0; i --***REMOVED*** {
    for (var j = this.tabstop; j > 0; j --***REMOVED*** {
      print(" "***REMOVED***
  ***REMOVED***
***REMOVED***
}
printer.on("opentag", function (tag***REMOVED*** {
  this.indent(***REMOVED***
  this.level ++
  print("<"+tag.name***REMOVED***
  for (var i in tag.attributes***REMOVED*** {
    print(" "+i+"=\""+entity(tag.attributes[i]***REMOVED***+"\""***REMOVED***
***REMOVED***
  print(">"***REMOVED***
}***REMOVED***

printer.on("text", ontext***REMOVED***
printer.on("doctype", ontext***REMOVED***
function ontext (text***REMOVED*** {
  this.indent(***REMOVED***
  print(text***REMOVED***
}

printer.on("closetag", function (tag***REMOVED*** {
  this.level --
  this.indent(***REMOVED***
  print("</"+tag+">"***REMOVED***
}***REMOVED***

printer.on("cdata", function (data***REMOVED*** {
  this.indent(***REMOVED***
  print("<![CDATA["+data+"]]>"***REMOVED***
}***REMOVED***

printer.on("comment", function (comment***REMOVED*** {
  this.indent(***REMOVED***
  print("<!--"+comment+"-->"***REMOVED***
}***REMOVED***

printer.on("error", function (error***REMOVED*** {
  console.error(error***REMOVED***
  throw error
}***REMOVED***

if (!process.argv[2]***REMOVED*** {
  throw new Error("Please provide an xml file to prettify\n"+
    "TODO: read from stdin or take a file"***REMOVED***
}
var xmlfile = require("path"***REMOVED***.join(process.cwd(***REMOVED***, process.argv[2]***REMOVED***
var fstr = fs.createReadStream(xmlfile, { encoding: "utf8" }***REMOVED***

function print (c***REMOVED*** {
  if (!process.stdout.write(c***REMOVED******REMOVED*** {
    fstr.pause(***REMOVED***
***REMOVED***
}

process.stdout.on("drain", function (***REMOVED*** {
  fstr.resume(***REMOVED***
}***REMOVED***

fstr.pipe(printer***REMOVED***
