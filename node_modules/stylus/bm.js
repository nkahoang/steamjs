
/**
 * Module dependencies.
 */

var stylus = require('./'***REMOVED***
  , fs = require('fs'***REMOVED***;

var times = ~~process.env.TIMES || 1
  , avgs = [];

// test cases

var cases = fs.readdirSync('test/cases'***REMOVED***.filter(function(file***REMOVED***{
  return ~file.indexOf('.styl'***REMOVED***;
}***REMOVED***.map(function(file***REMOVED***{
  return file.replace('.styl', ''***REMOVED***;
}***REMOVED***;

console.log(***REMOVED***;
cases.forEach(function(test***REMOVED***{
  var name = test.replace(/[-.]/g, ' '***REMOVED***;
  var path = 'test/cases/' + test + '.styl';
  var styl = fs.readFileSync(path, 'utf8'***REMOVED***.replace(/\r/g, ''***REMOVED***;

  var style = stylus(styl***REMOVED***
    .set('filename', path***REMOVED***
    .include(__dirname + '/test/images'***REMOVED***
    .include(__dirname + '/test/cases/import.basic'***REMOVED***
    .define('url', stylus.url(***REMOVED******REMOVED***;

  if (~test.indexOf('compress'***REMOVED******REMOVED*** style.set('compress', true***REMOVED***;

  var runs = []
    , n = times
    , start;

  while (n--***REMOVED*** {
    start = new Date;
    style.render(function(err***REMOVED***{
      if (err***REMOVED*** throw err;
  ***REMOVED******REMOVED***;
    runs.push(new Date - start***REMOVED***;
***REMOVED***

  var avg = runs.reduce(function(sum, n***REMOVED***{
    return sum + n;
***REMOVED******REMOVED*** / times;

  avgs.push(avg***REMOVED***;

  // im cool like that
  var avgavg = avgs.reduce(function(sum, n***REMOVED***{
    return sum + n;
***REMOVED******REMOVED*** / avgs.length;

  if (avg > avgavg***REMOVED*** {
    console.log('  \033[31m%s \033[31m%dms \033[90m+%dms\033[0m', name, avg | 0, avg - avgavg | 0***REMOVED***;
***REMOVED*** else {
    console.log('  \033[36m%s \033[90m%dms\033[0m', name, avg | 0***REMOVED***;
***REMOVED***
}***REMOVED***;
console.log(***REMOVED***;