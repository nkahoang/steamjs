// Generated by CoffeeScript 1.7.1
(function() {
  exports.get = function(req, res) {
    var id, steam;
    steam = require("../steam");
    id = req.params.id;
    if ('undefined' !== typeof id) {
      return res.send(id);
    } else {
      return res.send("all");
    }
  };

  exports.user_owned_games = function(req, res) {
    return require("../steam")(null, function(err, steam) {
      var id;
      id = req.query.id ? req.query.id : req.params.id;
      if ('undefined' === typeof id) {
        return res.json({
          success: false,
          message: "No ID specified"
        });
      } else {
        return steam.get_user_owned_games(id, function(err, result) {
          if (err) {
            return res.json({
              success: false,
              message: err
            });
          } else {
            return res.json(result);
          }
        });
      }
    });
  };

  exports.force_reset = function(req, res) {
    return require("../steam")(null, function(err, steam) {
      return steam._get_app_list(null, function(err, e) {
        if (e.success) {
          steam._read_from_redis_list();
        }
        return res.json(e);
      });
    });
  };

  exports.get_missing_apps = function(req, res) {
    return require("../steam")(null, function(err, steam) {
      return steam._get_new_apps(function(err, e) {
        if (e.success) {
          steam._grab_data_from_steam(e.new_app_list);
        }
        return res.json(e);
      });
    });
  };

}).call(this);

//# sourceMappingURL=steam.map
